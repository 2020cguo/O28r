hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.io.asyncfs.FanOutOneBlockAsyncDFSOutputHelper.HEART_BEAT_SEQNO'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.io.asyncfs.FanOutOneBlockAsyncDFSOutputHelper.READ_TIMEOUT'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput.java:22:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.io.asyncfs.FanOutOneBlockAsyncDFSOutputHelper.completeFile'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput.java:23:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.io.asyncfs.FanOutOneBlockAsyncDFSOutputHelper.endFileLease'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput.java:24:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.io.asyncfs.FanOutOneBlockAsyncDFSOutputHelper.getStatus'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput.java:25:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.util.LocatedBlockHelper.getLocatedBlockLocations'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput.java:26:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.util.NettyFutureUtils.consume'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput.java:27:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.util.NettyFutureUtils.safeWrite'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput.java:28:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.util.NettyFutureUtils.safeWriteAndFlush'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput.java:29:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hdfs.DFSConfigKeys.DFS_CLIENT_SOCKET_TIMEOUT_KEY'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput.java:30:	UnnecessaryImport:	Unused static import 'org.apache.hbase.thirdparty.io.netty.handler.timeout.IdleState.READER_IDLE'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput.java:31:	UnnecessaryImport:	Unused static import 'org.apache.hbase.thirdparty.io.netty.handler.timeout.IdleState.WRITER_IDLE'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput.java:168:	LooseCoupling:	Avoid using implementation types like 'ConcurrentLinkedDeque'; use the interface instead
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput.java:170:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput.java:194:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput.java:278:	AvoidBranchingStatementAsLastInLoop:	Avoid using a branching statement as the last in a loop.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput.java:433:	CompareObjectsWithEquals:	Use equals() to compare object references.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutput.java:472:	CompareObjectsWithEquals:	Use equals() to compare object references.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.io.asyncfs.FanOutOneBlockAsyncDFSOutputSaslHelper.createEncryptor'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.io.asyncfs.FanOutOneBlockAsyncDFSOutputSaslHelper.trySaslNegotiate'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:22:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.util.LocatedBlockHelper.getLocatedBlockLocations'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:23:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.util.NettyFutureUtils.addListener'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:24:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.util.NettyFutureUtils.safeClose'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:25:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.util.NettyFutureUtils.safeWriteAndFlush'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:26:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hdfs.client.HdfsClientConfigKeys.DFS_CLIENT_SOCKET_TIMEOUT_KEY'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:27:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hdfs.client.HdfsClientConfigKeys.DFS_CLIENT_USE_DN_HOSTNAME'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:28:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hdfs.client.HdfsClientConfigKeys.DFS_CLIENT_USE_DN_HOSTNAME_DEFAULT'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:29:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hdfs.protocol.datatransfer.BlockConstructionStage.PIPELINE_SETUP_CREATE'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:30:	UnnecessaryImport:	Unused static import 'org.apache.hbase.thirdparty.io.netty.channel.ChannelOption.CONNECT_TIMEOUT_MILLIS'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:31:	UnnecessaryImport:	Unused static import 'org.apache.hbase.thirdparty.io.netty.handler.timeout.IdleState.READER_IDLE'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:88:	UnnecessaryImport:	Unused import 'org.apache.hadoop.net.NetUtils'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:95:	UnnecessaryImport:	Unused import 'org.apache.hbase.thirdparty.io.netty.bootstrap.Bootstrap'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:101:	UnnecessaryImport:	Unused import 'org.apache.hbase.thirdparty.io.netty.channel.ChannelFuture'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:102:	UnnecessaryImport:	Unused import 'org.apache.hbase.thirdparty.io.netty.channel.ChannelFutureListener'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:105:	UnnecessaryImport:	Unused import 'org.apache.hbase.thirdparty.io.netty.channel.ChannelInitializer'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:114:	UnnecessaryImport:	Unused import 'org.apache.hbase.thirdparty.io.netty.util.concurrent.FutureListener'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:176:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:178:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:201:	MethodNamingConventions:	The static method name 'createFileCreator3_3' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:313:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:458:	UnusedPrivateMethod:	Avoid unused private methods such as 'createOutput(DistributedFileSystem, String, boolean, boolean, short, long, EventLoopGroup, Class<? extends Channel>, StreamSlowMonitor)'.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:481:	AvoidInstanceofChecksInCatchClause:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:519:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:522:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:534:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:534:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ie' on all code paths
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:596:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:601:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:604:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:607:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputHelper.java:616:	EmptyCatchBlock:	Avoid empty catch blocks
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.util.NettyFutureUtils.safeWrite'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hdfs.client.HdfsClientConfigKeys.DFS_ENCRYPT_DATA_TRANSFER_CIPHER_SUITES_KEY'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper.java:22:	UnnecessaryImport:	Unused static import 'org.apache.hbase.thirdparty.io.netty.handler.timeout.IdleState.READER_IDLE'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper.java:142:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper.java:145:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper.java:148:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper.java:184:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper.java:214:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper.java:349:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper.java:363:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper.java:416:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper.java:422:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/FanOutOneBlockAsyncDFSOutputSaslHelper.java:499:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/WrapperAsyncFSOutput.java:47:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/WrapperAsyncFSOutput.java:104:	UnnecessaryReturn:	Unnecessary return statement
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/monitor/ExcludeDatanodeManager.java:55:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/monitor/ExcludeDatanodeManager.java:82:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.io.asyncfs.monitor.ExcludeDatanodeManager.DEFAULT_WAL_EXCLUDE_DATANODE_TTL'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.io.asyncfs.monitor.ExcludeDatanodeManager.DEFAULT_WAL_MAX_EXCLUDE_SLOW_DATANODE_COUNT'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor.java:22:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.io.asyncfs.monitor.ExcludeDatanodeManager.WAL_EXCLUDE_DATANODE_TTL_KEY'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor.java:23:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.io.asyncfs.monitor.ExcludeDatanodeManager.WAL_MAX_EXCLUDE_SLOW_DATANODE_COUNT_KEY'
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/monitor/StreamSlowMonitor.java:122:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/util/RecoverLeaseFSUtils.java:86:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/util/RecoverLeaseFSUtils.java:157:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/util/RecoverLeaseFSUtils.java:175:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/util/RecoverLeaseFSUtils.java:178:	AvoidInstanceofChecksInCatchClause:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/util/RecoverLeaseFSUtils.java:180:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/util/RecoverLeaseFSUtils.java:181:	AvoidInstanceofChecksInCatchClause:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/util/RecoverLeaseFSUtils.java:184:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/util/RecoverLeaseFSUtils.java:207:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupAdmin.java:45:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_BACKUP_LIST_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_BANDWIDTH'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:22:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_BANDWIDTH_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:23:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_DEBUG'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:24:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_DEBUG_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:25:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_KEEP'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:26:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_KEEP_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:27:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_LIST'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:28:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_PATH'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:29:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_PATH_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:30:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_RECORD_NUMBER'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:31:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_RECORD_NUMBER_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:32:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_SET'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:33:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_SET_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:34:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_TABLE'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:35:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_TABLE_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:36:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_WORKERS'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:37:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_WORKERS_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:38:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_YARN_QUEUE_NAME'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupDriver.java:39:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_YARN_QUEUE_NAME_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupHFileCleaner.java:120:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'deletables'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupHFileCleaner.java:158:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupHFileCleaner.java:171:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupInfo.java:436:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupInfo.java:508:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupObserver.java:104:	UnnecessaryReturn:	Unnecessary return statement
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:31:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:32:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:34:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:36:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:37:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:38:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:40:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:41:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:43:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:44:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:49:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:50:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:52:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:53:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:56:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:57:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:58:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:59:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:60:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:61:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:63:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:64:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:67:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:68:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:69:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:71:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:72:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:74:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:75:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:77:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:78:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:80:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:81:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:83:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:84:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:86:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:87:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:89:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:90:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:91:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:93:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:95:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:96:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupRestoreConstants': 'BACKUP_ENABLE_KEY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:105:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:108:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:113:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:115:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupRestoreConstants.java:117:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupTableInfo.java:43:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupTableInfo.java:46:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'targetRootDir'.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/BackupTableInfo.java:46:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'backupId'.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/HBackupFileSystem.java:139:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'manifest'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/HBackupFileSystem.java:150:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/RestoreDriver.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_CHECK'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/RestoreDriver.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_CHECK_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/RestoreDriver.java:22:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_DEBUG'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/RestoreDriver.java:23:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_DEBUG_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/RestoreDriver.java:24:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_OVERWRITE'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/RestoreDriver.java:25:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_OVERWRITE_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/RestoreDriver.java:26:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_SET'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/RestoreDriver.java:27:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_SET_RESTORE_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/RestoreDriver.java:28:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_TABLE'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/RestoreDriver.java:29:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_TABLE_LIST_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/RestoreDriver.java:30:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_TABLE_MAPPING'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/RestoreDriver.java:31:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_TABLE_MAPPING_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/RestoreDriver.java:32:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_YARN_QUEUE_NAME'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/RestoreDriver.java:33:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_YARN_QUEUE_NAME_RESTORE_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/RestoreDriver.java:143:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'conn': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/RestoreDriver.java:186:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'table': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:69:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:75:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'table': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:77:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:96:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:100:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'sysTable': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:116:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:132:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:136:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:182:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:186:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:188:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:227:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:254:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:257:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:264:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:276:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:279:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:287:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:293:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:309:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:326:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:345:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:354:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:356:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:359:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:373:	AvoidBranchingStatementAsLastInLoop:	Avoid using a branching statement as the last in a loop.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:380:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'table': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:401:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'table': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:410:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:426:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'table': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:441:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'table': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:454:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'table': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:466:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'table': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:467:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'admin': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:475:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:482:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:483:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'table': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:485:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:501:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:565:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:618:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'sysTable': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupAdminImpl.java:645:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_BACKUP_LIST_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_BANDWIDTH'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:22:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_BANDWIDTH_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:23:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_DEBUG'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:24:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_DEBUG_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:25:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_KEEP'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:26:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_KEEP_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:27:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_LIST'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:28:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_PATH'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:29:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_PATH_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:30:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_RECORD_NUMBER'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:31:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_RECORD_NUMBER_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:32:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_SET'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:33:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_SET_BACKUP_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:34:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_SET_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:35:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_TABLE'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:36:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_TABLE_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:37:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_TABLE_LIST_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:38:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_WORKERS'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:39:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_WORKERS_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:40:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_YARN_QUEUE_NAME'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:41:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.OPTION_YARN_QUEUE_NAME_DESC'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:150:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:340:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:376:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'table': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:479:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'sysTable': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:519:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'sysTable': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:526:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:588:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:600:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'sysTable': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:672:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'conn': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:673:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'sysTable': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:677:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:832:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'conn': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:833:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'admin': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:884:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'sysTable': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:910:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:926:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:945:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:1033:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'sysTable': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:1052:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'admin': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:1072:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'admin': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupCommands.java:1094:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'admin': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManager.java:183:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManager.java:232:	OptimizableToArrayCall:	This call to Collection.toArray() may be optimizable
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManager.java:247:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManager.java:248:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManager.java:277:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManager.java:278:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManager.java:280:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManager.java:289:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManager.java:323:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManager.java:341:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManager.java:352:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManager.java:354:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManager.java:355:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManager.java:394:	AvoidInstanceofChecksInCatchClause:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManager.java:407:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManager.java:452:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManager.java:474:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:115:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:193:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:288:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:341:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} && {thenBranch};`
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:427:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:434:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:443:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:451:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:481:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:484:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:520:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:521:	LooseCoupling:	Avoid using implementation types like 'TreeMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:536:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:537:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:538:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:558:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:559:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:560:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:589:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:591:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:602:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:612:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:626:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:633:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:639:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupManifest.java:645:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:196:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'getTableName' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:197:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'getTableNameForBulkLoadedData' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:206:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'getSystemTableDescriptor' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:210:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'getSystemTableForBulkLoadedDataDescriptor' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:225:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:247:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:257:	LocalVariableNamingConventions:	The local variable name 'TIMEOUT' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:301:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'createScanForBulkLoadedFiles' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:311:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'PATH_COL' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:312:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'PATH_COL' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:330:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'createScanForBulkLoadedFiles' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:343:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'TBL_COL' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:344:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'TBL_COL' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:348:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'FAM_COL' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:349:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'FAM_COL' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:353:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'PATH_COL' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:354:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'PATH_COL' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:412:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'createPutForCommittedBulkload' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:414:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:433:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'createPutForPreparedBulkload' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:435:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:450:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:453:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:469:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'createScanForOrigBulkLoadedFiles' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:485:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'getRegionNameFromOrigBulkLoadRow' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:487:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'FAM_COL' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:488:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'FAM_COL' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:492:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'PATH_COL' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:493:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'PATH_COL' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:497:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'STATE_COL' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:498:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'STATE_COL' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:501:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'BL_PREPARE' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:520:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:550:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'createPutForBulkLoadedFile' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:682:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:691:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:727:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:731:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:778:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:814:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:842:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:845:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:846:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:854:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:872:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:876:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:952:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:982:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:985:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1004:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1118:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1170:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1181:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1185:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1294:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'SESSIONS_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1307:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'SESSIONS_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1319:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'SESSIONS_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1342:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1353:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1365:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1378:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1391:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1406:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'SESSIONS_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1431:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1446:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1471:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1487:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1517:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1518:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1519:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1520:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1522:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1532:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'getSnapshotName' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1532:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'getTableName' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1538:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1538:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'getTableNameAsString' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1540:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'getSnapshotName' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1542:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'getTableName' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1544:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'getTableName' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1550:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1572:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1572:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'getSnapshotName' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1574:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'getSnapshotName' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1579:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1597:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1598:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1599:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1600:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1602:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1611:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1662:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1667:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1744:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1749:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1763:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1783:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1800:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1808:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1809:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1810:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1825:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1835:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1846:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/BackupSystemTable.java:1859:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupSystemTable': 'META_FAMILY' is already in scope because it is declared in an enclosing type
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/ExclusiveOperationException.java:27:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/FullTableBackupClient.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.BACKUP_ATTEMPTS_PAUSE_MS_KEY'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/FullTableBackupClient.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.BACKUP_MAX_ATTEMPTS_KEY'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/FullTableBackupClient.java:22:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.DEFAULT_BACKUP_ATTEMPTS_PAUSE_MS'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/FullTableBackupClient.java:23:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.DEFAULT_BACKUP_MAX_ATTEMPTS'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/FullTableBackupClient.java:24:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.JOB_NAME_CONF_KEY'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/FullTableBackupClient.java:54:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/FullTableBackupClient.java:80:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/FullTableBackupClient.java:87:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/FullTableBackupClient.java:109:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/FullTableBackupClient.java:114:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/FullTableBackupClient.java:121:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/FullTableBackupClient.java:171:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/FullTableBackupClient.java:212:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalBackupManager.java:87:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalBackupManager.java:105:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalBackupManager.java:131:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalBackupManager.java:177:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalBackupManager.java:194:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalBackupManager.java:257:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalBackupManager.java:278:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalTableBackupClient.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.JOB_NAME_CONF_KEY'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalTableBackupClient.java:61:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalTableBackupClient.java:76:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalTableBackupClient.java:134:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalTableBackupClient.java:184:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalTableBackupClient.java:206:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalTableBackupClient.java:207:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalTableBackupClient.java:232:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalTableBackupClient.java:253:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalTableBackupClient.java:258:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalTableBackupClient.java:267:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalTableBackupClient.java:324:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalTableBackupClient.java:341:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalTableBackupClient.java:345:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalTableBackupClient.java:358:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/IncrementalTableBackupClient.java:375:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/RestoreTablesClient.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.BackupRestoreConstants.JOB_NAME_CONF_KEY'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/RestoreTablesClient.java:89:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/RestoreTablesClient.java:90:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/RestoreTablesClient.java:101:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/RestoreTablesClient.java:107:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/RestoreTablesClient.java:109:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/RestoreTablesClient.java:115:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/RestoreTablesClient.java:118:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/RestoreTablesClient.java:148:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/RestoreTablesClient.java:176:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/RestoreTablesClient.java:181:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/RestoreTablesClient.java:187:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/RestoreTablesClient.java:211:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/RestoreTablesClient.java:213:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/RestoreTablesClient.java:223:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/RestoreTablesClient.java:233:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/RestoreTablesClient.java:258:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/TableBackupClient.java:70:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/TableBackupClient.java:115:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/TableBackupClient.java:125:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/TableBackupClient.java:143:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/TableBackupClient.java:148:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/TableBackupClient.java:168:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/TableBackupClient.java:170:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/TableBackupClient.java:184:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/TableBackupClient.java:198:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/TableBackupClient.java:201:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/TableBackupClient.java:208:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/TableBackupClient.java:214:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/TableBackupClient.java:228:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/TableBackupClient.java:246:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/TableBackupClient.java:286:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/TableBackupClient.java:296:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/TableBackupClient.java:311:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/impl/TableBackupClient.java:376:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:74:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:74:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:138:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:171:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:172:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:173:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:201:	AvoidDecimalLiteralsInBigDecimalConstructor:	Avoid creating BigDecimal with a decimal (float/double) literal. Use a String literal
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:203:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:205:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:215:	AvoidDecimalLiteralsInBigDecimalConstructor:	Avoid creating BigDecimal with a decimal (float/double) literal. Use a String literal
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:218:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:226:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:228:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:229:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:236:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:239:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:256:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:273:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:295:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:342:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:388:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:413:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupCopyJob.java:422:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupMergeJob.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.util.BackupUtils.succeeded'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupMergeJob.java:67:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupMergeJob.java:67:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupMergeJob.java:116:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupMergeJob.java:117:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupMergeJob.java:128:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupMergeJob.java:143:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupMergeJob.java:159:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupMergeJob.java:173:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupMergeJob.java:185:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupMergeJob.java:280:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupMergeJob.java:288:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupMergeJob.java:298:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupMergeJob.java:326:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceBackupMergeJob.java:360:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceHFileSplitterJob.java:63:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceHFileSplitterJob.java:107:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceHFileSplitterJob.java:166:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'result'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceRestoreJob.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.backup.util.BackupUtils.succeeded'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceRestoreJob.java:46:	SingularField:	Perhaps 'player' could be replaced by a local variable.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceRestoreJob.java:49:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceRestoreJob.java:49:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceRestoreJob.java:72:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceRestoreJob.java:100:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/mapreduce/MapReduceRestoreJob.java:102:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/master/BackupLogCleaner.java:60:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/master/BackupLogCleaner.java:60:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/master/BackupLogCleaner.java:109:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/master/BackupLogCleaner.java:121:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/master/BackupLogCleaner.java:144:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/master/BackupLogCleaner.java:150:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/master/LogRollMasterProcedureManager.java:73:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/master/LogRollMasterProcedureManager.java:113:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/master/LogRollMasterProcedureManager.java:128:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/master/LogRollMasterProcedureManager.java:143:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/regionserver/LogRollBackupSubprocedure.java:69:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/regionserver/LogRollBackupSubprocedure.java:69:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/regionserver/LogRollBackupSubprocedure.java:92:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/regionserver/LogRollBackupSubprocedure.java:99:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/regionserver/LogRollBackupSubprocedure.java:100:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/regionserver/LogRollBackupSubprocedure.java:104:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'table': resource specifications are implicitly final
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/regionserver/LogRollBackupSubprocedure.java:106:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/regionserver/LogRollBackupSubprocedure.java:113:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/regionserver/LogRollBackupSubprocedure.java:121:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/regionserver/LogRollBackupSubprocedure.java:150:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/regionserver/LogRollBackupSubprocedurePool.java:53:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/regionserver/LogRollBackupSubprocedurePool.java:99:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/regionserver/LogRollBackupSubprocedurePool.java:101:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/regionserver/LogRollBackupSubprocedurePool.java:129:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/regionserver/LogRollRegionServerProcedureManager.java:77:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/regionserver/LogRollRegionServerProcedureManager.java:77:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/regionserver/LogRollRegionServerProcedureManager.java:86:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/regionserver/LogRollRegionServerProcedureManager.java:106:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/regionserver/LogRollRegionServerProcedureManager.java:153:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:93:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:96:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:97:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:97:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:110:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:112:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupUtils': 'getMinValue' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:136:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:148:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:153:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:160:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:191:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupUtils': 'parseHostFromOldLog' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:197:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:202:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:255:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:271:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupUtils': 'getCreationTime' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:274:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:279:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupUtils': 'getFiles' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:280:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupUtils': 'getFiles' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:286:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:330:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:337:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:339:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:351:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:427:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:438:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:446:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:449:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:459:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:461:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:468:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:473:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:499:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:499:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:500:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:501:	LooseCoupling:	Avoid using implementation types like 'TreeMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:534:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:585:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:618:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:641:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'info'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:661:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'request'
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:667:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:673:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:675:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:684:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BackupUtils': 'checkPathExist' is already in scope
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:685:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/BackupUtils.java:689:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:75:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:101:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:113:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:115:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:133:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:177:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:200:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:265:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:267:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:295:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:347:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:359:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:370:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:371:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:386:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:387:	LooseCoupling:	Avoid using implementation types like 'TreeMap'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:391:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:395:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:405:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:412:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:421:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:438:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:442:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:470:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:476:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:481:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:487:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:490:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-backup/src/main/java/org/apache/hadoop/hbase/backup/util/RestoreTool.java:500:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.ServerName.NON_STARTCODE'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:137:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:166:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:234:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:234:	ControlStatementBraces:	This statement should have braces
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:236:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:239:	ControlStatementBraces:	This statement should have braces
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:260:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:278:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:282:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:346:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:350:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:393:	ControlStatementBraces:	This statement should have braces
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:415:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:453:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:467:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:515:	UselessParentheses:	Useless parentheses.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:544:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:595:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:595:	ControlStatementBraces:	This statement should have braces
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:633:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:698:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:758:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeAssignmentHelper.java:769:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeLoadBalancer.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.favored.FavoredNodesPlan.Position.PRIMARY'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeLoadBalancer.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.favored.FavoredNodesPlan.Position.SECONDARY'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeLoadBalancer.java:22:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.favored.FavoredNodesPlan.Position.TERTIARY'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeLoadBalancer.java:171:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeLoadBalancer.java:211:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeLoadBalancer.java:359:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodesManager.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.ServerName.NON_STARTCODE'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodesManager.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.favored.FavoredNodeAssignmentHelper.FAVORED_NODES_NUM'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodesManager.java:22:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.favored.FavoredNodeAssignmentHelper.getDataNodePort'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodesManager.java:23:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.favored.FavoredNodesPlan.Position.PRIMARY'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodesManager.java:24:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.favored.FavoredNodesPlan.Position.SECONDARY'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodesManager.java:25:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.favored.FavoredNodesPlan.Position.TERTIARY'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodesManager.java:122:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodesPlan.java:39:	UnnecessaryModifier:	Unnecessary modifier 'static' on enum 'Position': nested enums are implicitly static
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/StartcodeAgnosticServerName.java:58:	ControlStatementBraces:	This statement should have braces
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/StartcodeAgnosticServerName.java:60:	ControlStatementBraces:	This statement should have braces
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/favored/StartcodeAgnosticServerName.java:65:	OverrideBothEqualsAndHashcode:	Ensure you override both equals() and hashCode()
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/AssignmentVerificationReport.java:197:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/AssignmentVerificationReport.java:257:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/AssignmentVerificationReport.java:352:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/AssignmentVerificationReport.java:403:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/AssignmentVerificationReport.java:427:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'java.text': 'DecimalFormat' is already in scope because it is imported in this file
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/AssignmentVerificationReport.java:582:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/LoadBalancer.java:155:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/RackManager.java:40:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/RackManager.java:81:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'racks'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/RegionPlan.java:45:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'RegionPlan': 'compareTo' is already in scope
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/SnapshotOfRegionAssignmentFromMeta.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.favored.FavoredNodesPlan.Position.PRIMARY'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/SnapshotOfRegionAssignmentFromMeta.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.favored.FavoredNodesPlan.Position.SECONDARY'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/SnapshotOfRegionAssignmentFromMeta.java:22:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.favored.FavoredNodesPlan.Position.TERTIARY'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/SnapshotOfRegionAssignmentFromMeta.java:124:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/SnapshotOfRegionAssignmentFromMeta.java:153:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/SnapshotOfRegionAssignmentFromMeta.java:185:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/SnapshotOfRegionAssignmentFromMeta.java:212:	ControlStatementBraces:	This statement should have braces
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BalancerClusterState.java:62:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BalancerClusterState.java:237:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BalancerClusterState.java:241:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BalancerClusterState.java:310:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BalancerClusterState.java:321:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BalancerClusterState.java:444:	UselessParentheses:	Useless parentheses.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BalancerClusterState.java:600:	AvoidBranchingStatementAsLastInLoop:	Avoid using a branching statement as the last in a loop.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java:77:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java:79:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java:85:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java:365:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java:388:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java:416:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java:425:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java:429:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java:558:	FormalParameterNamingConventions:	The method parameter name 'LoadOfAllTable' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java:590:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java:611:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/CacheAwareLoadBalancer.java:29:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.HConstants.BUCKET_CACHE_PERSISTENT_PATH_KEY'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/CacheAwareLoadBalancer.java:161:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/CacheAwareLoadBalancer.java:275:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/ClusterLoadState.java:48:	ControlStatementBraces:	This statement should have braces
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/CostFunction.java:81:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/DoubleArrayCost.java:77:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.ServerName.NON_STARTCODE'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.favored.FavoredNodeAssignmentHelper.FAVORED_NODES_NUM'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:22:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.favored.FavoredNodesPlan.Position.PRIMARY'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:23:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.favored.FavoredNodesPlan.Position.SECONDARY'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:24:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.favored.FavoredNodesPlan.Position.TERTIARY'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:171:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:306:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:312:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:318:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:363:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:392:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:405:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:410:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:422:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:460:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:513:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:529:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:543:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:676:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/FavoredStochasticBalancer.java:690:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/HeterogeneousRegionCountCostFunction.java:139:	UselessParentheses:	Useless parentheses.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/HeterogeneousRegionCountCostFunction.java:165:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/HeterogeneousRegionCountCostFunction.java:170:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/HeterogeneousRegionCountCostFunction.java:190:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/HeterogeneousRegionCountCostFunction.java:201:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/HeterogeneousRegionCountCostFunction.java:209:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/HeterogeneousRegionCountCostFunction.java:210:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/HeterogeneousRegionCountCostFunction.java:246:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/HeterogeneousRegionCountCostFunction.java:250:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionHDFSBlockLocationFinder.java:66:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionHDFSBlockLocationFinder.java:67:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionHDFSBlockLocationFinder.java:159:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionHDFSBlockLocationFinder.java:218:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'blocksDistribution'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionHDFSBlockLocationFinder.java:223:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionHDFSBlockLocationFinder.java:293:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionHDFSBlockLocationFinder.java:315:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionHDFSBlockLocationFinder.java:328:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionInfoComparator.java:33:	ControlStatementBraces:	This statement should have braces
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionInfoComparator.java:34:	ControlStatementBraces:	This statement should have braces
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionReplicaGroupingCostFunction.java:69:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionReplicaHostCostFunction.java:36:	SingularField:	Perhaps 'colocatedReplicaCountsPerGroup' could be replaced by a local variable.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/SimpleLoadBalancer.java:169:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/SimpleLoadBalancer.java:193:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/SimpleLoadBalancer.java:265:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/SimpleLoadBalancer.java:280:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/SimpleLoadBalancer.java:347:	OptimizableToArrayCall:	This call to Collection.toArray() may be optimizable
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/SimpleLoadBalancer.java:401:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/SimpleLoadBalancer.java:442:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/SimpleLoadBalancer.java:454:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/SimpleLoadBalancer.java:458:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/SimpleLoadBalancer.java:500:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/SimpleLoadBalancer.java:515:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/SimpleLoadBalancer.java:545:	LocalVariableNamingConventions:	The local variable name 'SnLoadMap' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/SimpleLoadBalancer.java:595:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java:147:	SingularField:	Perhaps 'curOverallCost' could be replaced by a local variable.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java:188:	EmptyCatchBlock:	Avoid empty catch blocks
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java:205:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java:209:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java:272:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java:336:	UselessParentheses:	Useless parentheses.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java:357:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java:384:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java:389:	UselessParentheses:	Useless parentheses.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java:403:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java:486:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java:497:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java:576:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/AuthUtil.java:150:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/AuthUtil.java:178:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/AuthUtil.java:181:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/AuthUtil.java:203:	LocalVariableNamingConventions:	The final local variable name 'CHECK_TGT_INTERVAL' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/AuthUtil.java:210:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/AuthUtil.java:235:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ByteBufferKeyOnlyKeyValue.java:48:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ByteBufferKeyValue.java:331:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ByteBufferTag.java:33:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/Cell.java:223:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Type': 'values' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellBuilder.java:28:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellBuilder.java:30:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellBuilder.java:32:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellBuilder.java:34:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellBuilder.java:36:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellBuilder.java:38:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellBuilder.java:40:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellBuilder.java:42:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellBuilder.java:44:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellBuilder.java:46:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellComparatorImpl.java:399:	UnnecessaryModifier:	Unnecessary modifier 'final' on method 'compareQualifiers': private methods cannot be overridden
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellComparatorImpl.java:786:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'CellComparatorImpl': 'COMPARATOR' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.KeyValue.COLUMN_FAMILY_DELIMITER'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.KeyValue.COLUMN_FAMILY_DELIM_ARRAY'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:22:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.KeyValue.getDelimiter'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:312:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:315:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:324:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:333:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:360:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:366:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:366:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:393:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:504:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:504:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:510:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:611:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:682:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:724:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:752:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:772:	UnnecessaryModifier:	Unnecessary modifier 'final' on method 'compareQualifiers': the method is already in a final class
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:791:	UnnecessaryModifier:	Unnecessary modifier 'final' on method 'compareFamilies': the method is already in a final class
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:812:	UnnecessaryModifier:	Unnecessary modifier 'final' on method 'compareColumns': the method is already in a final class
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:815:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:819:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CellUtil.java:830:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ChoreService.java:77:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ChoreService.java:85:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ChoreService.java:180:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ChoreService.java:370:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ChoreService.java:391:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ChoreService.java:403:	LooseCoupling:	Avoid using implementation types like 'LinkedHashMap'; use the interface instead
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ChoreService.java:410:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ChoreService.java:419:	LooseCoupling:	Avoid using implementation types like 'LinkedHashMap'; use the interface instead
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ChoreService.java:427:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CompoundConfiguration.java:57:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CompoundConfiguration.java:57:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CompoundConfiguration.java:172:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/CompoundConfiguration.java:174:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ExtendedCellBuilder.java:31:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ExtendedCellBuilder.java:34:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ExtendedCellBuilder.java:37:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ExtendedCellBuilder.java:40:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ExtendedCellBuilder.java:43:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ExtendedCellBuilder.java:46:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ExtendedCellBuilder.java:49:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ExtendedCellBuilder.java:52:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ExtendedCellBuilder.java:54:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ExtendedCellBuilder.java:57:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ExtendedCellBuilder.java:60:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ExtendedCellBuilder.java:71:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ExtendedCellBuilder.java:76:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ExtendedCellBuilder.java:86:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/HBaseConfiguration.java:41:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/HBaseConfiguration.java:228:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'HBaseConfiguration': 'create' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/HBaseConfiguration.java:234:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'HBaseConfiguration': 'subset' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/HBaseConfiguration.java:235:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'HBaseConfiguration': 'merge' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/HBaseConfiguration.java:255:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/HBaseConfiguration.java:266:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'HBaseConfiguration': 'create' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.io.hfile.BlockType.MAGIC_LENGTH'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java:183:	AvoidUsingHardCodedIP:	Do not hard code the IP address DEFAULT_HOST
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java:1049:	AvoidUsingHardCodedIP:	Do not hard code the IP address LOCALHOST_IP
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java:1224:	AvoidUsingHardCodedIP:	Do not hard code the IP address DEFAULT_STATUS_MULTICAST_ADDRESS
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java:1232:	AvoidUsingHardCodedIP:	Do not hard code the IP address DEFAULT_STATUS_MULTICAST_BIND_ADDRESS
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java:1250:	AvoidUsingHardCodedIP:	Do not hard code the IP address DEFAULT_STATUS_MULTICAST_PUBLISHER_BIND_ADDRESS
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/HDFSBlocksDistribution.java:203:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/HDFSBlocksDistribution.java:260:	EmptyCatchBlock:	Avoid empty catch blocks
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/HDFSBlocksDistribution.java:300:	OptimizableToArrayCall:	This call to Collection.toArray() may be optimizable
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/IndividualBytesFieldCell.java:264:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/InnerStoreCellComparator.java:80:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'InnerStoreCellComparator': 'INNER_STORE_COMPARATOR' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/JitterScheduledThreadPoolExecutorImpl.java:50:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'java.util.concurrent': 'RunnableScheduledFuture' is already in scope because it is imported in this file
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/JitterScheduledThreadPoolExecutorImpl.java:51:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'java.util.concurrent': 'RunnableScheduledFuture' is already in scope because it is imported in this file
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/JitterScheduledThreadPoolExecutorImpl.java:56:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'java.util.concurrent': 'RunnableScheduledFuture' is already in scope because it is imported in this file
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/JitterScheduledThreadPoolExecutorImpl.java:57:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'java.util.concurrent': 'RunnableScheduledFuture' is already in scope because it is imported in this file
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/JitterScheduledThreadPoolExecutorImpl.java:97:	SimplifiedTernary:	This conditional expression can be simplified with || or &&
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.util.Bytes.len'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:154:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeyValue': 'KEYVALUE_INFRASTRUCTURE_SIZE' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:173:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeyValue': 'KEYVALUE_WITH_TAGS_INFRASTRUCTURE_SIZE' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:187:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeyValue': 'KEYVALUE_INFRASTRUCTURE_SIZE' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:189:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeyValue': 'KEYVALUE_WITH_TAGS_INFRASTRUCTURE_SIZE' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:201:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeyValue': 'KEY_INFRASTRUCTURE_SIZE' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:208:	UnnecessaryModifier:	Unnecessary modifier 'static' on enum 'Type': nested enums are implicitly static
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:233:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Type': 'values' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:295:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:998:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:1012:	UnusedPrivateMethod:	Avoid unused private methods such as 'calculateHashForKey(Cell)'.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:1127:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:1132:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:1218:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'voffset'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:1225:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'vlength'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:1280:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeyValue': 'ROW_KEY_OFFSET' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:1491:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:1526:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:1527:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:1590:	CloneMethodMustBePublic:	clone() method must be public if the class implements Cloneable
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:1590:	CloneMethodMustImplementCloneable:	clone() method should be implemented only if implementing Cloneable interface
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:1732:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'compare'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:1861:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:1862:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:1885:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:1911:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:1912:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:1927:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'diff'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:1933:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'diff'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:2020:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:2025:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:2111:	CloneMethodMustBePublic:	clone() method must be public if the class implements Cloneable
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:2111:	CloneMethodMustImplementCloneable:	clone() method should be implemented only if implementing Cloneable interface
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:2258:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:2433:	UselessOverridingMethod:	Overriding method merely calls super
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValue.java:2438:	UselessOverridingMethod:	Overriding method merely calls super
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValueTestUtil.java:32:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValueTestUtil.java:66:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValueTestUtil.java:68:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValueUtil.java:46:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValueUtil.java:105:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'buffer'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValueUtil.java:420:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValueUtil.java:440:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeyValueUtil': 'ensureKeyValue' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValueUtil.java:473:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValueUtil.java:616:	ForLoopShouldBeWhileLoop:	This for loop could be simplified to a while loop
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/KeyValueUtil.java:712:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/MetaCellComparator.java:121:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/MetaCellComparator.java:122:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/NamespaceDescriptor.java:36:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/NamespaceDescriptor.java:46:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'NamespaceDescriptor': 'create' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/NamespaceDescriptor.java:48:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'NamespaceDescriptor': 'create' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/NamespaceDescriptor.java:53:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'NamespaceDescriptor': 'DEFAULT_NAMESPACE_NAME_STR' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/NamespaceDescriptor.java:54:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'NamespaceDescriptor': 'SYSTEM_NAMESPACE_NAME_STR' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/NamespaceDescriptor.java:157:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.HConstants.EMPTY_BYTE_ARRAY'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.Tag.TAG_LENGTH_SIZE'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:98:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'buffer'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:778:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:962:	SingularField:	Perhaps 'offset' could be replaced by a local variable.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:1188:	UnnecessaryModifier:	Unnecessary modifier 'final' on method 'compareKeyBasedOnColHint': the method is already in a final class
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:1240:	UnnecessaryModifier:	Unnecessary modifier 'final' on method 'compareKeyIgnoresMvcc': the method is already in a final class
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:2485:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:2489:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:2492:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:2496:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:2496:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:2497:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:2622:	UnnecessaryModifier:	Unnecessary modifier 'final' on method 'compare': the method is already in a final class
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:2627:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:2649:	UnnecessaryModifier:	Unnecessary modifier 'final' on method 'compareWithoutRow': the method is already in a final class
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:2665:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:2687:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:2695:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:2702:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:2785:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:2798:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/PrivateCellUtil.java:2798:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/RawCell.java:34:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'MAX_TAGS_LENGTH': the field is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/RawCell.java:66:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'checkForTagsLength': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/RawCell.java:73:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'createCell': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/RawCellBuilder.java:31:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/RawCellBuilder.java:34:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/RawCellBuilder.java:37:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/RawCellBuilder.java:40:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/RawCellBuilder.java:43:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/RawCellBuilder.java:46:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/RawCellBuilder.java:49:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/RawCellBuilder.java:52:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/RawCellBuilder.java:55:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/RawCellBuilder.java:58:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/RawCellBuilder.java:60:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ScheduledChore.java:145:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ScheduledChore.java:149:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ScheduledChore.java:168:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ScheduledChore.java:314:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ServerName.java:126:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ServerName.java:287:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/ServiceNotRunningException.java:43:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/SizeCachedByteBufferKeyValue.java:81:	UselessOverridingMethod:	Overriding method merely calls super
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/SizeCachedByteBufferKeyValue.java:86:	UselessOverridingMethod:	Overriding method merely calls super
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/SizeCachedKeyValue.java:31:	UnnecessaryAnnotationValueElement:	Avoid the use of value in annotations when its the only element
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/SizeCachedNoTagsByteBufferKeyValue.java:71:	UselessOverridingMethod:	Overriding method merely calls super
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/SizeCachedNoTagsByteBufferKeyValue.java:76:	UselessOverridingMethod:	Overriding method merely calls super
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/TableName.java:90:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'TableName': 'META_TABLE_NAME' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/TableName.java:175:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/TableName.java:207:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/TableName.java:208:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/TableName.java:249:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'TableName': 'NAMESPACE_DELIM' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/TableName.java:282:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/TableName.java:285:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/TableName.java:515:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/TableName.java:516:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/TableName.java:531:	CompareObjectsWithEquals:	Use equals() to compare object references.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/Tag.java:38:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'TYPE_LENGTH_SIZE': the field is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/Tag.java:39:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'TAG_LENGTH_SIZE': the field is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/Tag.java:40:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'INFRASTRUCTURE_SIZE': the field is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/Tag.java:41:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'MAX_TAG_LENGTH': the field is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/Tag.java:47:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'CUSTOM_TAG_TYPE_RANGE': the field is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/Tag.java:78:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'cloneValue': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/Tag.java:95:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getValueAsString': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/Tag.java:108:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'matchingValue': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/Tag.java:131:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'copyValueTo': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/Tag.java:145:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getValueAsLong': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/Tag.java:157:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getValueAsByte': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/TagBuilderFactory.java:26:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/codec/BaseDecoder.java:79:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/codec/BaseDecoder.java:82:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/codec/BaseEncoder.java:48:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/codec/BaseEncoder.java:53:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/conf/ConfigurationManager.java:112:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/conf/ConfigurationManager.java:113:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/filter/ByteArrayComparable.java:70:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/filter/ByteArrayComparable.java:70:	CompareObjectsWithEquals:	Use equals() to compare object references.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/ByteBuffAllocator.java:63:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ByteBuffAllocator': 'createOnHeap' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/ByteBuffAllocator.java:174:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/ByteBuffAllocator.java:245:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/ByteBuffAllocator.java:246:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/ByteBuffAllocator.java:386:	AvoidBranchingStatementAsLastInLoop:	Avoid using a branching statement as the last in a loop.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/ByteBuffInputStream.java:47:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/ByteBufferInputStream.java:48:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/ByteBufferListOutputStream.java:109:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/ByteBufferOutputStream.java:43:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/ByteBufferWriterOutputStream.java:79:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/FileChangeWatcher.java:76:	CloseResource:	Ensure that resources like this FileSystem object are closed after use
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/FileChangeWatcher.java:77:	CloseResource:	Ensure that resources like this WatchService object are closed after use
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/FileChangeWatcher.java:180:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/FileChangeWatcher.java:204:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/FileChangeWatcher.java:226:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/FileChangeWatcher.java:237:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/FileChangeWatcher.java:241:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/FileChangeWatcher.java:244:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/ImmutableBytesWritable.java:139:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/ImmutableBytesWritable.java:167:	FormalParameterNamingConventions:	The method parameter name 'right_obj' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/ImmutableBytesWritable.java:171:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} && {thenBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/TimeRange.java:138:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/TimeRange.java:142:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/TimeRange.java:169:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:146:	UnnecessaryModifier:	Unnecessary modifier 'static' on enum 'Algorithm': nested enums are implicitly static
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:151:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:170:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:177:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:196:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:234:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:253:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:260:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:279:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:286:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:305:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:312:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:331:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:338:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:357:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:365:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:384:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:428:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'bis2'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:435:	CloseResource:	Ensure that resources like this OutputStream object are closed after use
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:442:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'bos2'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:461:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:476:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:486:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:502:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:505:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:559:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/Compression.java:573:	EmptyCatchBlock:	Avoid empty catch blocks
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/DictionaryCache.java:51:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/DictionaryCache.java:65:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/DictionaryCache.java:82:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/DictionaryCache.java:106:	CloseResource:	Ensure that resources like this InputStream object are closed after use
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/DictionaryCache.java:113:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/DictionaryCache.java:139:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/compress/ReusableStreamGzipCodec.java:70:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/CipherProvider.java:32:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getName': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/CipherProvider.java:37:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getSupportedCiphers': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/CipherProvider.java:44:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getCipher': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/CryptoCipherProvider.java:66:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/Decryptor.java:33:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setKey': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/Decryptor.java:39:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getIvLength': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/Decryptor.java:45:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getBlockSize': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/Decryptor.java:50:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setIv': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/Decryptor.java:55:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'createDecryptionStream': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/DefaultCipherProvider.java:66:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/Encryption.java:100:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/Encryption.java:275:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Encryption': 'getCipher' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/Encryption.java:293:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Encryption': 'getCipher' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/Encryption.java:509:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Encryption': 'getCipher' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/Encryption.java:511:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/Encryption.java:541:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'provider'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/Encryptor.java:33:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setKey': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/Encryptor.java:39:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getIvLength': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/Encryptor.java:45:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getBlockSize': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/Encryptor.java:50:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getIv': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/Encryptor.java:55:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setIv': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/Encryptor.java:60:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'createEncryptionStream': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/KeyProvider.java:30:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'PASSWORD': the field is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/KeyProvider.java:31:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'PASSWORDFILE': the field is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/KeyProvider.java:36:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'init': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/KeyProvider.java:42:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getKey': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/KeyProvider.java:50:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getKeys': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/KeyStoreKeyProvider.java:132:	IdenticalCatchBranches:	'catch' branch identical to 'NoSuchAlgorithmException' branch
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/KeyStoreKeyProvider.java:153:	IdenticalCatchBranches:	'catch' branch identical to 'URISyntaxException' branch
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/KeyStoreKeyProvider.java:155:	IdenticalCatchBranches:	'catch' branch identical to 'URISyntaxException' branch
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/KeyStoreKeyProvider.java:170:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/KeyStoreKeyProvider.java:179:	IdenticalCatchBranches:	'catch' branch identical to 'UnrecoverableKeyException' branch
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/KeyStoreKeyProvider.java:181:	IdenticalCatchBranches:	'catch' branch identical to 'UnrecoverableKeyException' branch
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/aes/AESDecryptor.java:90:	IdenticalCatchBranches:	'catch' branch identical to 'InvalidKeyException' branch
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/aes/AESEncryptor.java:101:	IdenticalCatchBranches:	'catch' branch identical to 'InvalidKeyException' branch
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/aes/CommonsCryptoAESDecryptor.java:79:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/aes/CryptoAES.java:209:	LocalVariableNamingConventions:	The local variable name 'hMAC_MD5' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/tls/FileKeyStoreLoader.java:55:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/tls/FileKeyStoreLoader.java:55:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/tls/HBaseHostnameVerifier.java:220:	EmptyCatchBlock:	Avoid empty catch blocks
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/tls/HBaseHostnameVerifier.java:222:	IdenticalCatchBranches:	'catch' branch identical to 'NoSuchElementException' branch
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/tls/HBaseHostnameVerifier.java:222:	EmptyCatchBlock:	Avoid empty catch blocks
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/tls/HBaseHostnameVerifier.java:229:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/tls/HBaseTrustManager.java:175:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'addressVerificationException' on all code paths
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/tls/KeyStoreFileType.java:72:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/tls/KeyStoreFileType.java:90:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeyStoreFileType': 'values' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/tls/KeyStoreFileType.java:116:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeyStoreFileType': 'fromPropertyValue' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/tls/KeyStoreFileType.java:118:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeyStoreFileType': 'fromFilename' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/tls/PemReader.java:167:	EmptyCatchBlock:	Avoid empty catch blocks
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/tls/PemReader.java:174:	EmptyCatchBlock:	Avoid empty catch blocks
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/tls/PemReader.java:200:	EmptyCatchBlock:	Avoid empty catch blocks
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/tls/PemReader.java:207:	EmptyCatchBlock:	Avoid empty catch blocks
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/tls/X509Util.java:201:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/crypto/tls/X509Util.java:538:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java:804:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java:812:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/BufferedDataBlockEncoder.java:1185:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/CompressionState.java:87:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java:36:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/CopyKeyDataBlockEncoder.java:95:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoder.java:163:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'compareKey': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/DataBlockEncoding.java:66:	UnnecessaryModifier:	Unnecessary modifier 'private' on constructor 'DataBlockEncoding(int, String)': enum constructors are implicitly private
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/DiffKeyDeltaEncoder.java:389:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/EncodedDataBlock.java:258:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java:56:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/FastDiffDeltaEncoder.java:375:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.io.compress.Compression.Algorithm.NONE'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/HFileBlockDefaultEncodingContext.java:155:	CloseResource:	Ensure that resources like this InputStream object are closed after use
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/IndexBlockEncoding.java:58:	UnnecessaryModifier:	Unnecessary modifier 'private' on constructor 'IndexBlockEncoding(int, String)': enum constructors are implicitly private
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/PrefixKeyDeltaEncoder.java:191:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/RowIndexCodecV1.java:45:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/encoding/RowIndexSeekerV1.java:283:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/hadoopbackport/ThrottledInputStream.java:125:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/hadoopbackport/ThrottledInputStream.java:139:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java:113:	UnnecessaryModifier:	Unnecessary modifier 'private' on constructor 'BlockType(String, BlockCategory)': enum constructors are implicitly private
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java:155:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java:157:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/BlockType.java:172:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'blockType'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileContext.java:72:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileContext.java:249:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileContextBuilder.java:65:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/trace/HFileContextAttributesBuilderConsumer.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.trace.HBaseSemanticAttributes.CHECKSUM_KEY'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/trace/HFileContextAttributesBuilderConsumer.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.trace.HBaseSemanticAttributes.COMPRESSION_ALGORITHM_KEY'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/trace/HFileContextAttributesBuilderConsumer.java:22:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.trace.HBaseSemanticAttributes.DATA_BLOCK_ENCODING_KEY'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/trace/HFileContextAttributesBuilderConsumer.java:23:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.trace.HBaseSemanticAttributes.ENCRYPTION_CIPHER_KEY'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/trace/HFileContextAttributesBuilderConsumer.java:24:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.trace.HBaseSemanticAttributes.HFILE_NAME_KEY'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/hfile/trace/HFileContextAttributesBuilderConsumer.java:25:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.trace.HBaseSemanticAttributes.READ_TYPE_KEY'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/BlockIOUtils.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.trace.HBaseSemanticAttributes.DIRECT_BYTES_READ_KEY'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/BlockIOUtils.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.trace.HBaseSemanticAttributes.HEAP_BYTES_READ_KEY'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/BlockIOUtils.java:71:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/BlockIOUtils.java:100:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/BlockIOUtils.java:108:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/BlockIOUtils.java:147:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/BlockIOUtils.java:231:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/BlockIOUtils.java:240:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/BlockIOUtils.java:346:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/BlockIOUtils.java:347:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/BlockIOUtils.java:355:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/BlockIOUtils.java:400:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/BlockIOUtils.java:404:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/Dictionary.java:85:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'write': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/Dictionary.java:87:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Dictionary': 'NOT_IN_DICTIONARY' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/Dictionary.java:91:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Dictionary': 'NOT_IN_DICTIONARY' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/Dictionary.java:92:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Dictionary': 'NOT_IN_DICTIONARY' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/Dictionary.java:108:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'write': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/Dictionary.java:110:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Dictionary': 'NOT_IN_DICTIONARY' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/Dictionary.java:114:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Dictionary': 'NOT_IN_DICTIONARY' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/Dictionary.java:115:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Dictionary': 'NOT_IN_DICTIONARY' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/LRUDictionary.java:66:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/LRUDictionary.java:86:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/LRUDictionary.java:132:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/LRUDictionary.java:144:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/LRUDictionary.java:159:	CompareObjectsWithEquals:	Use equals() to compare object references.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/LRUDictionary.java:172:	CompareObjectsWithEquals:	Use equals() to compare object references.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/LRUDictionary.java:222:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/LRUDictionary.java:265:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/StreamUtils.java:39:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/StreamUtils.java:59:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/StreamUtils.java:63:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/StreamUtils.java:67:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/StreamUtils.java:93:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/StreamUtils.java:97:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/StreamUtils.java:101:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/io/util/StreamUtils.java:260:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/log/HBaseMarkers.java:25:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/net/Address.java:39:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/net/Address.java:55:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Address': 'fromParts' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/net/Address.java:64:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/net/Address.java:108:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Address': 'fromParts' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/ByteBuff.java:547:	UnusedPrivateMethod:	Avoid unused private methods such as 'wrap(List<ByteBuffer>, RefCnt)'.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/ByteBuff.java:548:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/MultiByteBuff.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.io.ByteBuffAllocator.NONE'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/MultiByteBuff.java:427:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/MultiByteBuff.java:458:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/MultiByteBuff.java:593:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/MultiByteBuff.java:607:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/MultiByteBuff.java:610:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/MultiByteBuff.java:764:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/MultiByteBuff.java:771:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/MultiByteBuff.java:779:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/MultiByteBuff.java:784:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/MultiByteBuff.java:1031:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/MultiByteBuff.java:1077:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/MultiByteBuff.java:1180:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/MultiByteBuff.java:1181:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/MultiByteBuff.java:1183:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/MultiByteBuff.java:1184:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/SingleByteBuff.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.io.ByteBuffAllocator.NONE'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/nio/SingleByteBuff.java:401:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfo.java:219:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/security/User.java:109:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/security/User.java:142:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/security/User.java:175:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/security/User.java:198:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'userForTesting'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/security/User.java:299:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/security/UserProvider.java:100:	OptimizableToArrayCall:	This call to Collection.toArray() may be optimizable
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/trace/TraceUtil.java:154:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'ignored': resource specifications are implicitly final
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/trace/TraceUtil.java:189:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/trace/TraceUtil.java:219:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteArrayMap.java:45:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteArrayMap.java:523:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteArrayMap.java:528:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/CopyOnWriteArrayMap.java:533:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/OrderedBlob.java:60:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/RawDouble.java:88:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'val'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/Struct.java:202:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/StructBuilder.java:35:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/StructBuilder.java:35:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/types/StructBuilder.java:50:	OptimizableToArrayCall:	This call to Collection.toArray() may be optimizable
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/AbstractByteRange.java:305:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/AbstractHBaseTool.java:68:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/AbstractHBaseTool.java:101:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/AbstractHBaseTool.java:138:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Addressing.java:33:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Addressing.java:121:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Addressing.java:125:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Addressing.java:177:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isAcceptableAddress': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/BoundedCompletionService.java:51:	UselessQualifiedThis:	Useless qualified this usage in the same class.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferArray.java:64:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferArray.java:119:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferArray.java:148:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferArray.java:159:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferArray.java:217:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferArray.java:218:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:91:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:102:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:144:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:169:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:170:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:188:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:200:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:267:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:333:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:345:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:364:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ByteBufferUtils': 'toByte' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:379:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ByteBufferUtils': 'toByte' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:380:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ByteBufferUtils': 'toByte' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:397:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:418:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:419:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:487:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:973:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:1002:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:1054:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:1055:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteBufferUtils.java:1312:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ByteBufferUtils': 'copyFromBufferToArray' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:62:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getBytes': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:67:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'unset': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:74:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'set': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:82:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'set': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:93:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'set': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:99:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getOffset': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:107:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setOffset': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:112:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getLength': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:120:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setLength': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:123:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isEmpty': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:130:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'get': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:137:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getShort': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:144:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getInt': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:151:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getLong': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:158:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getVLong': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:166:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'get': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:177:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'get': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:185:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'put': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:192:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'putShort': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:199:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'putInt': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:206:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'putLong': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:214:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'putVLong': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:222:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'put': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:233:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'put': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:240:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'deepCopyToNewArray': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:247:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'deepCopy': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:254:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'deepCopyTo': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:264:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'deepCopySubRangeTo': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:272:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'shallowCopy': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRange.java:282:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'shallowCopySubRange': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRangeUtils.java:32:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRangeUtils.java:47:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRangeUtils.java:51:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRangeUtils.java:58:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ByteRangeUtils.java:62:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hbase.thirdparty.com.google.common.base.Preconditions.checkArgument'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hbase.thirdparty.com.google.common.base.Preconditions.checkNotNull'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:22:	UnnecessaryImport:	Unused static import 'org.apache.hbase.thirdparty.com.google.common.base.Preconditions.checkPositionIndex'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:218:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Bytes': 'hashCode' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:243:	FormalParameterNamingConventions:	The method parameter name 'right_obj' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:247:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} && {thenBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:255:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Bytes': 'toString' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:281:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:313:	CompareObjectsWithEquals:	Use equals() to compare object references.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:542:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:556:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:577:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:578:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:602:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:788:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Bytes': 'toBytes' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:820:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Bytes': 'toBytes' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1112:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1133:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1172:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1176:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1191:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1209:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1280:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1335:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1353:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1365:	CompareObjectsWithEquals:	Use equals() to compare object references.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1372:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1373:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1413:	CompareObjectsWithEquals:	Use equals() to compare object references.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1450:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1451:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1461:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1473:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1510:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1529:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Bytes': 'SIZEOF_LONG' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1531:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Bytes': 'SIZEOF_LONG' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1534:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Bytes': 'SIZEOF_LONG' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1540:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1541:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1563:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1564:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1565:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1566:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1571:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1571:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1603:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1603:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1616:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1617:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1618:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1711:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1716:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1731:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1746:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1810:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1810:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1888:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1889:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1893:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1894:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1921:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1934:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Bytes': 'toBytes' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1947:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Bytes': 'toBytesBinary' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1993:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Bytes': 'BYTES_RAWCOMPARATOR' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1995:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1997:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:1999:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2025:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2027:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2029:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2055:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2071:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2082:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2096:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2107:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2124:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2135:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2148:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2148:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2161:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2161:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2225:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2237:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Bytes': 'equals' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2248:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Bytes': 'compareTo' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2262:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Bytes': 'toBytes' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2305:	AvoidBranchingStatementAsLastInLoop:	Avoid using a branching statement as the last in a loop.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Bytes.java:2519:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ChecksumType.java:70:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ChecksumType': 'CRC32C' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ChecksumType.java:79:	UnnecessaryModifier:	Unnecessary modifier 'private' on constructor 'ChecksumType(byte)': enum constructors are implicitly private
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ChecksumType.java:92:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ChecksumType': 'values' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ChecksumType.java:105:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ChecksumType': 'values' is already in scope
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:34:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:164:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:188:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:197:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:236:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:327:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ClassSize': 'OBJECT' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:329:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ClassSize': 'OBJECT' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:331:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ClassSize': 'OBJECT' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:360:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:370:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:370:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:370:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:371:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:371:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:371:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:372:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:372:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:372:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:373:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:373:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:373:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:374:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:374:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:374:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:375:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:375:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:375:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:376:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:376:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:376:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:377:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:377:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:377:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:399:	LocalVariableNamingConventions:	The local variable name 'prealign_size' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java:449:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Classes.java:26:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Classes.java:36:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Classes.java:38:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Classes.java:40:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Classes.java:42:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Classes.java:44:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Classes.java:46:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Classes.java:48:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Classes.java:50:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/CommonFSUtils.java:221:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/CommonFSUtils.java:527:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/CommonFSUtils.java:535:	AvoidInstanceofChecksInCatchClause:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/CommonFSUtils.java:561:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/CommonFSUtils.java:603:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/CommonFSUtils.java:695:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/CommonFSUtils.java:698:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ConcatenatedLists.java:34:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ConcatenatedLists.java:79:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ConcatenatedLists.java:83:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ConcatenatedLists.java:86:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ConcurrentMapUtils.java:29:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ConcurrentMapUtils.java:58:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/CoprocessorClassLoader.java:72:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/CoprocessorClassLoader.java:118:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/CoprocessorClassLoader.java:225:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/CoprocessorClassLoader.java:237:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/CoprocessorClassLoader.java:254:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/CoprocessorClassLoader.java:305:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/DNS.java:71:	UnnecessaryModifier:	Unnecessary modifier 'private' on constructor 'ServerType(String)': enum constructors are implicitly private
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/DynamicClassLoader.java:77:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/DynamicClassLoader.java:126:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/DynamicClassLoader.java:201:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/DynamicClassLoader.java:213:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/DynamicClassLoader.java:255:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/EnvironmentEdgeManager.java:57:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/EnvironmentEdgeManager.java:58:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ExceptionUtil.java:46:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/FutureUtils.java:72:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/FutureUtils.java:90:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/FutureUtils.java:186:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/FutureUtils.java:200:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Hash.java:29:	SingleMethodSingleton:	Class contains multiple getInstance methods. Please review.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/IdLock.java:99:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/IdLock.java:158:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/IdLock.java:182:	CompareObjectsWithEquals:	Use equals() to compare object references.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/IdLock.java:188:	UseNotifyAllInsteadOfNotify:	Call Thread.notifyAll() rather than Thread.notify()
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JVM.java:50:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JVM.java:52:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JVM.java:86:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JVM.java:89:	SimplifiedTernary:	This conditional expression can be simplified with || or &&
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JVM.java:89:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JVM.java:164:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JVM.java:181:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JVM.java:231:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JVM.java:295:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JVM.java:305:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JenkinsHash.java:103:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JenkinsHash.java:166:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JenkinsHash.java:169:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JenkinsHash.java:171:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JenkinsHash.java:173:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JenkinsHash.java:175:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JenkinsHash.java:177:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JenkinsHash.java:179:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JenkinsHash.java:181:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JenkinsHash.java:183:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JenkinsHash.java:185:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JenkinsHash.java:187:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/JenkinsHash.java:189:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/KeyLocker.java:64:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/MD5Hash.java:29:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Methods.java:41:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Methods.java:62:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/MurmurHash.java:47:	LocalVariableNamingConventions:	The local variable name 'len_4' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/MurmurHash.java:50:	LocalVariableNamingConventions:	The local variable name 'i_4' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/MurmurHash.java:50:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/MurmurHash.java:67:	LocalVariableNamingConventions:	The local variable name 'len_m' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/MurmurHash.java:69:	LocalVariableNamingConventions:	The local variable name 'i_m' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/MurmurHash3.java:48:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/MurmurHash3.java:70:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/MurmurHash3.java:73:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/MurmurHash3.java:79:	ImplicitSwitchFallThrough:	This switch case may be reached by fallthrough from the previous case
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/NettyFutureUtils.java:57:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/NettyFutureUtils.java:63:	UnusedPrivateMethod:	Avoid unused private methods such as 'loggingWhenError(Future<?>)'.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/NettyFutureUtils.java:65:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/NonceKey.java:38:	SimplifyConditional:	No need to check for null before an instanceof
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/NonceKey.java:41:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ObjectIntPair.java:31:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ObjectIntPair.java:61:	SuspiciousEqualsMethodName:	The method name and parameter number are suspiciously close to equals(Object)
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.util.Order.ASCENDING'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.util.Order.DESCENDING'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:297:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:339:	UseStandardCharsets:	Please use StandardCharsets constants
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:369:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:369:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:369:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:371:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:392:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:393:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:469:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:470:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:471:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:472:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:473:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:474:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:475:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:476:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:477:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:503:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:568:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:607:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:609:	EmptyControlStatement:	Empty while statement
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:609:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:645:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:710:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:822:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:851:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:933:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:934:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:935:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:936:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:955:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:956:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:957:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:975:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:976:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:990:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:994:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:996:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:997:	EmptyControlStatement:	Empty for statement
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:997:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1015:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1016:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1016:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1025:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1050:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1055:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1093:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1102:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1105:	EmptyControlStatement:	Empty for statement
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1105:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1123:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1145:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1162:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1167:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1192:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1202:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1224:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1248:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1274:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1334:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1365:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1451:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1722:	EmptyControlStatement:	Empty for statement
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/OrderedBytes.java:1722:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Pair.java:27:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Pair.java:27:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Pair.java:35:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Pair.java:56:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Pair.java:56:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Pair.java:90:	SuspiciousEqualsMethodName:	The method name and parameter number are suspiciously close to equals(Object)
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PairOfSameType.java:58:	SuspiciousEqualsMethodName:	The method name and parameter number are suspiciously close to equals(Object)
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PairOfSameType.java:71:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PairOfSameType.java:72:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PairOfSameType.java:73:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PairOfSameType.java:93:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PairOfSameType.java:93:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PairOfSameType.java:94:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PairOfSameType.java:95:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:42:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getPosition': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:49:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setPosition': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:54:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getRemaining': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:59:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'peek': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:64:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'get': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:69:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getShort': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:74:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getInt': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:79:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getLong': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:85:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getVLong': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:93:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'get': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:104:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'get': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:111:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'put': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:118:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'putShort': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:125:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'putInt': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:132:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'putLong': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:139:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'putVLong': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:146:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'put': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:156:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'put': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:161:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setLimit': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:166:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getLimit': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:171:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'unset': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:174:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'set': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:177:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'set': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:180:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'set': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:183:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setOffset': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:186:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setLength': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:189:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'get': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:192:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'get': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:195:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'put': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:198:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'putShort': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:201:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'putInt': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:204:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'putLong': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:207:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'put': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:210:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'put': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:213:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'deepCopy': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:216:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'shallowCopy': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PositionedByteRange.java:219:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'shallowCopySubRange': the method is declared in an interface type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PrettyPrinter.java:33:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PrettyPrinter.java:102:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PrettyPrinter.java:163:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PrettyPrinter.java:180:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'PrettyPrinter': 'INTERVAL_PATTERN' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PrettyPrinter.java:213:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/PrettyPrinter.java:291:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'PrettyPrinter': 'SIZE_PATTERN' is already in scope because it is declared in an enclosing type
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Random64.java:71:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReadOnlyByteRangeException.java:27:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReadOnlyByteRangeException.java:27:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReflectedFunctionCache.java:87:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReflectedFunctionCache.java:93:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReflectedFunctionCache.java:97:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReflectedFunctionCache.java:106:	UnusedFormalParameter:	Avoid unused method parameters such as 'argument'.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReflectionUtils.java:42:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReflectionUtils.java:60:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReflectionUtils.java:160:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReflectionUtils.java:162:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReflectionUtils.java:175:	LocalVariableNamingConventions:	The final local variable name 'STACK_DEPTH' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReflectionUtils.java:253:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReflectionUtils.java:286:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReflectionUtils.java:288:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/ReflectionUtils.java:301:	IdenticalCatchBranches:	'catch' branch identical to 'NoSuchMethodException' branch
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/SimpleByteRange.java:27:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/SimpleByteRange.java:126:	OverrideBothEqualsAndHashcode:	Ensure you override both equals() and hashCode()
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/SimpleMutableByteRange.java:108:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/SimpleMutableByteRange.java:114:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/SimpleMutableByteRange.java:208:	OverrideBothEqualsAndHashcode:	Ensure you override both equals() and hashCode()
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/SimplePositionedMutableByteRange.java:162:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/SimplePositionedMutableByteRange.java:168:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/SimplePositionedMutableByteRange.java:194:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/SimplePositionedMutableByteRange.java:200:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Threads.java:37:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Threads.java:94:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Threads.java:99:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Threads.java:200:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Threads.java:201:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Triple.java:32:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Triple.java:49:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Triple.java:50:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Triple.java:51:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Triple.java:64:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Triple.java:65:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Triple.java:66:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Triple.java:67:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Triple.java:68:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition};`
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Triple.java:68:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/Triple.java:69:	ControlStatementBraces:	This statement should have braces
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/UnsafeAccess.java:361:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/UnsafeAccess.java:362:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/VersionInfo.java:36:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/VersionInfo.java:143:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/VersionInfo.java:145:	OptimizableToArrayCall:	This call to Collection.toArray() may be optimizable
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/util/VersionInfo.java:146:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKConfig.java:165:	UselessParentheses:	Useless parentheses.
hbase/hbase-common/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKConfig.java:209:	OptimizableToArrayCall:	This call to Collection.toArray() may be optimizable
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/CompatibilityFactory.java:30:	UseUtilityClass:	This utility class has a non-private constructor
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/CompatibilityFactory.java:39:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/CompatibilityFactory.java:42:	SingletonClassReturningNewInstance:	getInstance method always creates a new object and hence does not comply to Singleton Design Pattern behaviour. Please review
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/CompatibilityFactory.java:57:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/CompatibilityFactory.java:61:	IdenticalCatchBranches:	'catch' branch identical to 'Exception' branch
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/CompatibilitySingletonFactory.java:36:	UnnecessaryModifier:	Unnecessary modifier 'static' on enum 'SingletonStorage': nested enums are implicitly static
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/CompatibilitySingletonFactory.java:48:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/CompatibilitySingletonFactory.java:56:	SingletonClassReturningNewInstance:	getInstance method always creates a new object and hence does not comply to Singleton Design Pattern behaviour. Please review
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/CompatibilitySingletonFactory.java:73:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/CompatibilitySingletonFactory.java:77:	IdenticalCatchBranches:	'catch' branch identical to 'Exception' branch
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/ipc/MetricsHBaseServerSourceFactoryImpl.java:31:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master/MetricsMasterProcSource.java:32:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master/MetricsMasterProcSource.java:37:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master/MetricsMasterProcSource.java:42:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master/MetricsMasterProcSource.java:47:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master/MetricsMasterProcSource.java:50:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master/MetricsMasterProcSource.java:52:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master/MetricsMasterSource.java:99:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master/MetricsMasterSource.java:105:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master/MetricsMasterSource.java:111:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master/MetricsMasterSourceFactoryImpl.java:29:	UnnecessaryModifier:	Unnecessary modifier 'static' on enum 'FactoryStorage': nested enums are implicitly static
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master/balancer/MetricsStochasticBalancerSource.java:33:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'updateMetricsSize': the method is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master/balancer/MetricsStochasticBalancerSource.java:38:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'updateStochasticCost': the method is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/master/balancer/MetricsStochasticBalancerSourceImpl.java:35:	SingularField:	Perhaps 'metricsSize' could be replaced by a local variable.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/metrics/BaseSourceImpl.java:43:	UnnecessaryModifier:	Unnecessary modifier 'static' on enum 'DefaultMetricsSystemInitializer': nested enums are implicitly static
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/metrics/Interns.java:39:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/metrics/Interns.java:41:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/metrics/Interns.java:47:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/metrics/Interns.java:49:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/metrics/MetricsInfoImpl.java:32:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/metrics/impl/GlobalMetricRegistriesAdapter.java:82:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/metrics/impl/GlobalMetricRegistriesAdapter.java:118:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/metrics/impl/GlobalMetricRegistriesAdapter.java:135:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/metrics/impl/HBaseMetrics2HadoopMetricsAdapter.java:67:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/metrics/impl/HBaseMetrics2HadoopMetricsAdapter.java:67:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/metrics/impl/HBaseMetrics2HadoopMetricsAdapter.java:106:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/metrics/impl/HBaseMetrics2HadoopMetricsAdapter.java:125:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionAggregateSourceImpl.java:74:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionServerSourceFactoryImpl.java:32:	UnnecessaryModifier:	Unnecessary modifier 'static' on enum 'FactoryStorage': nested enums are implicitly static
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsRegionSourceImpl.java:79:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableAggregateSourceImpl.java:35:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableAggregateSourceImpl.java:56:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.COMPACTED_INPUT_BYTES'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.COMPACTED_INPUT_BYTES_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:22:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.COMPACTED_OUTPUT_BYTES'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:23:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.COMPACTED_OUTPUT_BYTES_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:24:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.COMPACTION_INPUT_FILE_COUNT'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:25:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.COMPACTION_INPUT_FILE_COUNT_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:26:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.COMPACTION_INPUT_SIZE'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:27:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.COMPACTION_INPUT_SIZE_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:28:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.COMPACTION_OUTPUT_FILE_COUNT'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:29:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.COMPACTION_OUTPUT_FILE_COUNT_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:30:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.COMPACTION_OUTPUT_SIZE'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:31:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.COMPACTION_OUTPUT_SIZE_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:32:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.COMPACTION_TIME'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:33:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.COMPACTION_TIME_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:34:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.FLUSHED_MEMSTORE_BYTES'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:35:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.FLUSHED_MEMSTORE_BYTES_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:36:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.FLUSHED_OUTPUT_BYTES'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:37:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.FLUSHED_OUTPUT_BYTES_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:38:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.FLUSH_MEMSTORE_SIZE'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:39:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.FLUSH_MEMSTORE_SIZE_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:40:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.FLUSH_OUTPUT_SIZE'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:41:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.FLUSH_OUTPUT_SIZE_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:42:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.FLUSH_TIME'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:43:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.FLUSH_TIME_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:44:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.MAJOR_COMPACTED_INPUT_BYTES'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:45:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.MAJOR_COMPACTED_INPUT_BYTES_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:46:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.MAJOR_COMPACTED_OUTPUT_BYTES'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:47:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.MAJOR_COMPACTED_OUTPUT_BYTES_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:48:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.MAJOR_COMPACTION_INPUT_FILE_COUNT'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:49:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.MAJOR_COMPACTION_INPUT_FILE_COUNT_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:50:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.MAJOR_COMPACTION_INPUT_SIZE'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:51:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.MAJOR_COMPACTION_INPUT_SIZE_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:52:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.MAJOR_COMPACTION_OUTPUT_FILE_COUNT'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:53:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.MAJOR_COMPACTION_OUTPUT_FILE_COUNT_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:54:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.MAJOR_COMPACTION_OUTPUT_SIZE'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:55:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.MAJOR_COMPACTION_OUTPUT_SIZE_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:56:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.MAJOR_COMPACTION_TIME'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:57:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.MAJOR_COMPACTION_TIME_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:58:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.SPLIT_KEY'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:59:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.SPLIT_REQUEST_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:60:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.SPLIT_REQUEST_KEY'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:61:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.SPLIT_SUCCESS_DESC'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:62:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.regionserver.MetricsRegionServerSource.SPLIT_SUCCESS_KEY'
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:404:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableSourceImpl.java:407:	UselessParentheses:	Useless parentheses.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsTableWrapperAggregate.java:29:	UnnecessaryModifier:	Unnecessary modifier 'public' on field 'HASH': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsUserAggregateSource.java:34:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'METRICS_NAME': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsUserAggregateSource.java:39:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'METRICS_CONTEXT': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsUserAggregateSource.java:44:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'METRICS_DESCRIPTION': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsUserAggregateSource.java:49:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'METRICS_JMX_CONTEXT': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsUserAggregateSource.java:51:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'NUM_USERS': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsUserAggregateSource.java:52:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'NUMBER_OF_USERS_DESC': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsUserAggregateSourceImpl.java:37:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsUserAggregateSourceImpl.java:85:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsUserSourceImpl.java:65:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/regionserver/MetricsUserSourceImpl.java:220:	UnnecessaryReturn:	Unnecessary return statement
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationGlobalSourceSource.java:25:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_WAL_READER_EDITS_BUFFER': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationGlobalSourceSourceImpl.java:150:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSinkSource.java:24:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SINK_AGE_OF_LAST_APPLIED_OP': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSinkSource.java:25:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SINK_APPLIED_BATCHES': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSinkSource.java:26:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SINK_FAILED_BATCHES': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSinkSource.java:27:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SINK_APPLIED_OPS': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSinkSource.java:28:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SINK_APPLIED_HFILES': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSource.java:32:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSource.java:37:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSource.java:42:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSource.java:47:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceFactory.java:24:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getSink': the method is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceFactory.java:26:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getSource': the method is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceFactory.java:28:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getTableSource': the method is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceFactory.java:30:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getGlobalSource': the method is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceFactoryImpl.java:26:	UnnecessaryModifier:	Unnecessary modifier 'static' on enum 'SourceHolder': nested enums are implicitly static
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:26:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_SIZE_OF_LOG_QUEUE': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:27:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_AGE_OF_LAST_SHIPPED_OP': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:28:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_SHIPPED_BATCHES': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:29:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_FAILED_BATCHES': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:31:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_SHIPPED_BYTES': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:32:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_SHIPPED_OPS': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:34:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_LOG_READ_IN_BYTES': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:35:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_LOG_READ_IN_EDITS': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:37:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_LOG_EDITS_FILTERED': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:39:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_SHIPPED_HFILES': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:40:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_SIZE_OF_HFILE_REFS_QUEUE': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:42:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_CLOSED_LOGS_WITH_UNKNOWN_LENGTH': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:44:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_UNCLEANLY_CLOSED_LOGS': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:45:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_UNCLEANLY_CLOSED_IGNORED_IN_BYTES': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:47:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_RESTARTED_LOG_READING': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:48:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_REPEATED_LOG_FILE_BYTES': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:49:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_COMPLETED_LOGS': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:50:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_COMPLETED_RECOVERY_QUEUES': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:51:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_FAILED_RECOVERY_QUEUES': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:53:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SOURCE_INITIALIZING': the field is declared in an interface type
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:93:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsReplicationSourceSource.java:97:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/rest/MetricsRESTSource.java:110:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/rest/MetricsRESTSource.java:116:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/rest/MetricsRESTSource.java:122:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/rest/MetricsRESTSource.java:128:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/rest/MetricsRESTSource.java:134:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/hbase/rest/MetricsRESTSource.java:140:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/metrics2/impl/JmxCacheBuster.java:58:	UselessParentheses:	Useless parentheses.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/metrics2/impl/JmxCacheBuster.java:58:	UselessParentheses:	Useless parentheses.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/metrics2/lib/DefaultMetricsSystemHelper.java:41:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/metrics2/lib/DefaultMetricsSystemHelper.java:47:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/metrics2/lib/DefaultMetricsSystemHelper.java:50:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/metrics2/lib/DefaultMetricsSystemHelper.java:52:	AvoidAccessibilityAlteration:	You should not modify visibility of constructors, methods or fields using setAccessible()
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/metrics2/lib/DefaultMetricsSystemHelper.java:54:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/metrics2/lib/DefaultMetricsSystemHelper.java:90:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/metrics2/lib/MutableRangeHistogram.java:68:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/metrics2/util/MetricSampleQuantiles.java:49:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/metrics2/util/MetricSampleQuantiles.java:79:	UselessParentheses:	Useless parentheses.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/metrics2/util/MetricSampleQuantiles.java:81:	UselessParentheses:	Useless parentheses.
hbase/hbase-hadoop-compat/src/main/java/org/apache/hadoop/metrics2/util/MetricSampleQuantiles.java:217:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/CompletedProcedureCleaner.java:53:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/CompletedProcedureRetainer.java:26:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/DelayedProcedure.java:27:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/FailedProcedure.java:21:	UnnecessaryImport:	Unused import 'java.util.Objects'
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/FailedProcedure.java:27:	UnnecessaryImport:	Unused import 'org.apache.hadoop.hbase.shaded.protobuf.generated.ProcedureProtos.ProcedureState'
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/FailedProcedure.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/FailedProcedure.java:34:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/FailedProcedure.java:72:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/FailedProcedure.java:76:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/OnePhaseProcedure.java:25:	AbstractClassWithoutAnyMethod:	No abstract method which means that the keyword is most likely used to prevent instantiation. Use a private or protected constructor instead.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/OnePhaseProcedure.java:25:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/Procedure.java:112:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/Procedure.java:140:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/Procedure.java:141:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/Procedure.java:143:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/Procedure.java:145:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/Procedure.java:163:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/Procedure.java:938:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/Procedure.java:939:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/Procedure.java:954:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/Procedure.java:965:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/Procedure.java:970:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/Procedure.java:975:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/Procedure.java:981:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/Procedure.java:985:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureEvent.java:107:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:77:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:98:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:104:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:105:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:111:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:112:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:119:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:120:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:122:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:123:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:129:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:148:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:154:	SimplifiedTernary:	This conditional expression can be simplified with || or &&
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:161:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:181:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:189:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:196:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:203:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:205:	LooseCoupling:	Avoid using implementation types like 'CopyOnWriteArrayList'; use the interface instead
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:222:	LooseCoupling:	Avoid using implementation types like 'CopyOnWriteArrayList'; use the interface instead
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:243:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:358:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:613:	AvoidThreadGroup:	Avoid using java.lang.ThreadGroup; it is not thread safe
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:624:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:630:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:644:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:657:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:701:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:839:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:975:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:984:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1097:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1108:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1311:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1312:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1323:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1324:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1335:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1336:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1385:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1392:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1408:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1426:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1446:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1451:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1461:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1518:	LooseCoupling:	Avoid using implementation types like 'PriorityQueue'; use the interface instead
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1647:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1700:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1702:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1781:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1795:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1800:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1907:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1934:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1957:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1959:	UnnecessaryReturn:	Unnecessary return statement
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:1977:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:2009:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:2011:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:2033:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:2063:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:2082:	UnusedPrivateMethod:	Avoid unused private methods such as 'runProcedure()'.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:2086:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:2093:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:2099:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:2120:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:2121:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java:2206:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureInMemoryChore.java:32:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureInMemoryChore.java:37:	FinalParameterInAbstractMethod:	Final parameter in abstract method
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureInMemoryChore.java:55:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureInMemoryChore.java:59:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureUtil.java:127:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureUtil.java:155:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureUtil.java:188:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureUtil.java:290:	CloseResource:	Ensure that resources like this InputStream object are closed after use
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher.java:58:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher.java:58:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher.java:74:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher.java:238:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher.java:238:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher.java:277:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher.java:277:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher.java:310:	LooseCoupling:	Avoid using implementation types like 'DelayQueue'; use the interface instead
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher.java:322:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher.java:357:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher.java:362:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RootProcedureState.java:46:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RootProcedureState.java:56:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RootProcedureState.java:111:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RootProcedureState.java:180:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RootProcedureState.java:208:	UselessParentheses:	Useless parentheses.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RootProcedureState.java:215:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/SequentialProcedure.java:40:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/SimpleProcedureScheduler.java:73:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/StateMachineProcedure.java:44:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/StateMachineProcedure.java:44:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/StateMachineProcedure.java:168:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/StateMachineProcedure.java:187:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/StateMachineProcedure.java:194:	OptimizableToArrayCall:	This call to Collection.toArray() may be optimizable
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/StateMachineProcedure.java:225:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/StateMachineProcedure.java:227:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/StateMachineProcedure.java:231:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/StateMachineProcedure.java:247:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/StoppableThread.java:45:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/StoppableThread.java:51:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/TimeoutExecutorThread.java:33:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/TimeoutExecutorThread.java:39:	LooseCoupling:	Avoid using implementation types like 'DelayQueue'; use the interface instead
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/TimeoutExecutorThread.java:82:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/TimeoutExecutorThread.java:86:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/TimeoutExecutorThread.java:127:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/TimeoutExecutorThread.java:128:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/TwoPhaseProcedure.java:25:	AbstractClassWithoutAnyMethod:	No abstract method which means that the keyword is most likely used to prevent instantiation. Use a private or protected constructor instead.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/TwoPhaseProcedure.java:25:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/ProcedureStore.java:47:	UnnecessaryModifier:	Unnecessary modifier 'public' on interface 'ProcedureStoreListener': the interface is declared in an interface type
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/ProcedureStore.java:52:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/ProcedureStore.java:58:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/ProcedureStore.java:73:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/ProcedureStore.java:80:	UnnecessaryModifier:	Unnecessary modifier 'public' on interface 'ProcedureIterator': the interface is declared in an interface type
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/ProcedureStore.java:121:	UnnecessaryModifier:	Unnecessary modifier 'public' on interface 'ProcedureLoader': the interface is declared in an interface type
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/ProcedureStore.java:249:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/ProcedureStoreBase.java:29:	LooseCoupling:	Avoid using implementation types like 'CopyOnWriteArrayList'; use the interface instead
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/BitSetNode.java:144:	SimplifiedTernary:	This conditional expression can be simplified with || or &&
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/BitSetNode.java:153:	UselessParentheses:	Useless parentheses.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/BitSetNode.java:197:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/BitSetNode.java:238:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/BitSetNode.java:358:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/BitSetNode.java:405:	UselessParentheses:	Useless parentheses.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/BitSetNode.java:428:	UselessParentheses:	Useless parentheses.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/ProcedureStoreTracker.java:46:	LooseCoupling:	Avoid using implementation types like 'TreeMap'; use the interface instead
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/ProcedureStoreTracker.java:100:	SimplifiedTernary:	This conditional expression can be simplified with || or &&
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/ProcedureStoreTracker.java:114:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/ProcedureStoreTracker.java:121:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/ProcedureStoreTracker.java:158:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/ProcedureStoreTracker.java:208:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/ProcedureWALFile.java:123:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/ProcedureWALFile.java:165:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/ProcedureWALFile.java:167:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/ProcedureWALFile.java:174:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/ProcedureWALFile.java:204:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/ProcedureWALFormat.java:194:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'trailer'
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/ProcedureWALFormat.java:209:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/ProcedureWALFormat.java:243:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/ProcedureWALFormatReader.java:169:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/ProcedureWALPrettyPrinter.java:171:	UselessParentheses:	Useless parentheses.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/ProcedureWALPrettyPrinter.java:177:	UselessParentheses:	Useless parentheses.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/ProcedureWALPrettyPrinter.java:183:	UselessParentheses:	Useless parentheses.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureMap.java:83:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:163:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:185:	LooseCoupling:	Avoid using implementation types like 'LinkedTransferQueue'; use the interface instead
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:266:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:268:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:312:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:329:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:383:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:435:	AvoidBranchingStatementAsLastInLoop:	Avoid using a branching statement as the last in a loop.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:515:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:522:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:552:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:581:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:605:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:625:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:650:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:680:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:689:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:872:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:885:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:902:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:903:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:904:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:960:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:963:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:984:	UselessParentheses:	Useless parentheses.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:1173:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:1244:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:1246:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:1301:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:1302:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/store/wal/WALProcedureStore.java:1328:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/util/ByteSlot.java:104:	UselessParentheses:	Useless parentheses.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/util/DelayedUtil.java:78:	LooseCoupling:	Avoid using implementation types like 'DelayQueue'; use the interface instead
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/util/DelayedUtil.java:109:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'DelayedUtil': 'getRemainingTime' is already in scope
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/util/DelayedUtil.java:114:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'DelayedUtil': 'compareDelayed' is already in scope
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/util/DelayedUtil.java:141:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/util/StringUtils.java:36:	UselessParentheses:	Useless parentheses.
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/util/StringUtils.java:84:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/util/StringUtils.java:91:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/CopyReplicationPeers.java:60:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/CopyReplicationPeers.java:78:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/ReplicationListener.java:36:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'regionServerRemoved': the method is declared in an interface type
hbase/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/ReplicationPeerImpl.java:33:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/ReplicationPeerImpl.java:37:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/ReplicationPeerImpl.java:39:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/ReplicationPeerImpl.java:44:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/ReplicationPeerStorageType.java:33:	UnnecessaryModifier:	Unnecessary modifier 'private' on constructor 'ReplicationPeerStorageType(Class<? extends ReplicationPeerStorage>)': enum constructors are implicitly private
hbase/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/ReplicationPeers.java:47:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/ReplicationPeers.java:53:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/ReplicationPeers.java:171:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/ReplicationQueueInfo.java:86:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/ReplicationQueueInfo.java:104:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/ReplicationQueueInfo.java:108:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/ZKReplicationPeerStorage.java:34:	UnnecessaryImport:	Unused import 'org.apache.hadoop.hbase.shaded.protobuf.generated.ReplicationProtos'
hbase/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/ZKReplicationQueueStorageForMigration.java:240:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:29:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:31:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:33:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:35:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:36:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:37:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:38:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:39:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:40:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:41:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:43:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:45:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:46:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:47:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:48:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:50:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:51:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:52:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:53:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:54:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:55:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:56:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:57:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:58:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:59:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:60:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:61:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:63:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:64:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:65:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:66:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:67:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:69:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:70:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:72:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:73:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:74:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:75:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:76:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:77:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:78:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:79:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:80:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:81:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:82:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:83:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:84:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:85:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:87:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:88:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:93:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:96:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:97:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:100:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/Constants.java:101:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/MultiRowResource.java:55:	LiteralsFirstInComparisons:	Position literals first in String comparisons
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/MultiRowResource.java:85:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/NamespacesInstanceResource.java:110:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/NamespacesInstanceResource.java:121:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/NamespacesInstanceResource.java:160:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ioe' on all code paths
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/NamespacesInstanceResource.java:230:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/NamespacesResource.java:74:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/ProtobufStreamingOutput.java:81:	UnusedFormalParameter:	Avoid unused method parameters such as 'contentType'.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RESTServer.java:117:	AssignmentToNonFinalStatic:	Possible unsafe assignment to non-final static field 'conf' in a constructor.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RESTServer.java:243:	EmptyControlStatement:	Empty if statement
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RESTServer.java:294:	AvoidUsingHardCodedIP:	Do not hard code the IP address ${variableName}
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RESTServer.java:406:	AvoidUsingHardCodedIP:	Do not hard code the IP address ${variableName}
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RESTServer.java:456:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RESTServer.java:466:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RESTServer.java:470:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RESTServlet.java:38:	SingleMethodSingleton:	Class contains multiple getInstance methods. Please review.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RESTServlet.java:59:	UselessParentheses:	Useless parentheses.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RESTServlet.java:148:	ControlStatementBraces:	This statement should have braces
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RESTServlet.java:149:	ControlStatementBraces:	This statement should have braces
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RESTServlet.java:162:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RESTServletContainer.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.http.ProxyUserAuthenticationFilter.toLowerCase'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RESTServletContainer.java:71:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/ResourceBase.java:40:	EmptyCatchBlock:	Avoid empty catch blocks
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RootResource.java:57:	UnnecessaryModifier:	Unnecessary modifier 'final' on method 'getTableList': private methods cannot be overridden
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RowResource.java:117:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RowResource.java:731:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RowResource.java:825:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RowResultGenerator.java:76:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RowResultGenerator.java:78:	AvoidInstanceofChecksInCatchClause:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RowResultGenerator.java:85:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RowResultGenerator.java:93:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RowSpec.java:43:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RowSpec.java:85:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RowSpec.java:94:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RowSpec.java:121:	ControlStatementBraces:	This statement should have braces
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RowSpec.java:175:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RowSpec.java:241:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RowSpec.java:245:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RowSpec.java:252:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/RowSpec.java:370:	OptimizableToArrayCall:	This call to Collection.toArray() may be optimizable
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/ScannerInstanceResource.java:58:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/ScannerInstanceResource.java:61:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'table'.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/ScannerInstanceResource.java:132:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/ScannerResource.java:105:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/ScannerResource.java:107:	AvoidInstanceofChecksInCatchClause:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/ScannerResource.java:111:	AvoidInstanceofChecksInCatchClause:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/ScannerResource.java:112:	AvoidInstanceofChecksInCatchClause:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/ScannerResource.java:112:	AvoidInstanceofChecksInCatchClause:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/ScannerResultGenerator.java:147:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/ScannerResultGenerator.java:181:	IdenticalCatchBranches:	'catch' branch identical to 'UnknownScannerException' branch
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/ScannerResultGenerator.java:184:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/SchemaResource.java:143:	UnusedFormalParameter:	Avoid unused method parameters such as 'uriInfo'.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/SchemaResource.java:196:	AvoidInstanceofChecksInCatchClause:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/SchemaResource.java:239:	EmptyCatchBlock:	Avoid empty catch blocks
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/TableResource.java:198:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/TableScanResource.java:127:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/TableScanResource.java:138:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/TableScanResource.java:140:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/TableScanResource.java:143:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/client/Client.java:82:	SingularField:	Perhaps 'conf' could be replaced by a local variable.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/client/Client.java:107:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/client/Client.java:214:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/client/Client.java:328:	ControlStatementBraces:	This statement should have braces
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/client/Client.java:499:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/client/Client.java:503:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/client/Cluster.java:37:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/filter/AuthFilter.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.rest.Constants.REST_AUTHENTICATION_PRINCIPAL'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/filter/AuthFilter.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.rest.Constants.REST_DNS_INTERFACE'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/filter/AuthFilter.java:22:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.rest.Constants.REST_DNS_NAMESERVER'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/filter/GZIPResponseWrapper.java:78:	SimplifyConditional:	No need to check for null before an instanceof
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/filter/GZIPResponseWrapper.java:88:	SimplifyConditional:	No need to check for null before an instanceof
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/filter/GZIPResponseWrapper.java:99:	SimplifyConditional:	No need to check for null before an instanceof
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/filter/GzipFilter.java:53:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/filter/GzipFilter.java:64:	UselessParentheses:	Useless parentheses.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/filter/GzipFilter.java:68:	UselessParentheses:	Useless parentheses.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/filter/GzipFilter.java:75:	CloseResource:	Ensure that resources like this OutputStream object are closed after use
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/filter/RestCsrfPreventionFilter.java:80:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/filter/RestCsrfPreventionFilter.java:194:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/CellModel.java:81:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ColumnSchemaModel.java:61:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ColumnSchemaModel.java:61:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ColumnSchemaModel.java:130:	MethodNamingConventions:	The instance method name '__getBlockcache' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ColumnSchemaModel.java:138:	MethodNamingConventions:	The instance method name '__getBlocksize' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ColumnSchemaModel.java:146:	MethodNamingConventions:	The instance method name '__getBloomfilter' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ColumnSchemaModel.java:152:	MethodNamingConventions:	The instance method name '__getCompression' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ColumnSchemaModel.java:158:	MethodNamingConventions:	The instance method name '__getInMemory' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ColumnSchemaModel.java:166:	MethodNamingConventions:	The instance method name '__getTTL' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ColumnSchemaModel.java:172:	MethodNamingConventions:	The instance method name '__getVersions' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ColumnSchemaModel.java:182:	MethodNamingConventions:	The instance method name '__setBlocksize' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ColumnSchemaModel.java:189:	MethodNamingConventions:	The instance method name '__setBlockcache' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ColumnSchemaModel.java:193:	MethodNamingConventions:	The instance method name '__setBloomfilter' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ColumnSchemaModel.java:200:	MethodNamingConventions:	The instance method name '__setCompression' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ColumnSchemaModel.java:207:	MethodNamingConventions:	The instance method name '__setInMemory' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ColumnSchemaModel.java:214:	MethodNamingConventions:	The instance method name '__setTTL' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ColumnSchemaModel.java:221:	MethodNamingConventions:	The instance method name '__setVersions' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/NamespacesInstanceModel.java:62:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/NamespacesModel.java:56:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/RowModel.java:68:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ScannerModel.java:123:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ScannerModel.java:139:	UnnecessaryModifier:	Unnecessary modifier 'static' on enum 'ComparatorType': nested enums are implicitly static
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ScannerModel.java:148:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ScannerModel.java:248:	UnnecessaryModifier:	Unnecessary modifier 'static' on enum 'FilterType': nested enums are implicitly static
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ScannerModel.java:274:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ScannerModel.java:584:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ScannerModel.java:840:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/ScannerModel.java:841:	ControlStatementBraces:	This statement should have braces
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/StorageClusterStatusModel.java:130:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/StorageClusterStatusModel.java:388:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/StorageClusterStatusModel.java:528:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/StorageClusterStatusModel.java:528:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/StorageClusterVersionModel.java:64:	UnusedPrivateMethod:	Avoid unused private methods such as 'valueOf(String)'.
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/TableInfoModel.java:59:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/TableListModel.java:46:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/TableListModel.java:46:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/TableModel.java:47:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/TableRegionModel.java:56:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/TableSchemaModel.java:81:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/TableSchemaModel.java:212:	MethodNamingConventions:	The instance method name '__getIsMeta' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/TableSchemaModel.java:218:	MethodNamingConventions:	The instance method name '__getIsRoot' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/TableSchemaModel.java:224:	MethodNamingConventions:	The instance method name '__getReadOnly' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/TableSchemaModel.java:232:	MethodNamingConventions:	The instance method name '__setIsMeta' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/TableSchemaModel.java:239:	MethodNamingConventions:	The instance method name '__setIsRoot' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/TableSchemaModel.java:246:	MethodNamingConventions:	The instance method name '__setReadOnly' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/VersionModel.java:59:	UncommentedEmptyConstructor:	Document empty constructor
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/model/VersionModel.java:75:	ControlStatementBraces:	This statement should have braces
hbase/hbase-rest/src/main/java/org/apache/hadoop/hbase/rest/provider/JAXBContextResolver.java:71:	UselessParentheses:	Useless parentheses.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/ExecutorStatusChore.java:48:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/ExecutorStatusChore.java:74:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/ExecutorStatusChore.java:75:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HBaseRpcServicesBase.java:151:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'be' on all code paths
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HBaseRpcServicesBase.java:338:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'clearSlowLogResponses'
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HBaseServerBase.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.ChoreService.CHORE_SERVICE_INITIAL_POOL_SIZE'
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HBaseServerBase.java:21:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.ChoreService.DEFAULT_CHORE_SERVICE_INITIAL_POOL_SIZE'
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HBaseServerBase.java:22:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.HConstants.DEFAULT_HBASE_SPLIT_COORDINATED_BY_ZK'
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HBaseServerBase.java:23:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.HConstants.HBASE_SPLIT_WAL_COORDINATED_BY_ZK'
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HBaseServerBase.java:99:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HBaseServerBase.java:306:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HBaseServerBase.java:320:	AvoidUsingHardCodedIP:	Do not hard code the IP address ${variableName}
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HBaseServerBase.java:324:	AvoidUsingHardCodedIP:	Do not hard code the IP address ${variableName}
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HBaseServerBase.java:350:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HBaseServerBase.java:354:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HBaseServerBase.java:356:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HBaseServerBase.java:497:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Thread': 'currentThread' is already in scope
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HealthCheckChore.java:35:	SingularField:	Perhaps 'config' could be replaced by a local variable.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HealthCheckChore.java:43:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HealthCheckChore.java:58:	UselessParentheses:	Useless parentheses.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HealthCheckChore.java:66:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HealthChecker.java:41:	SingularField:	Perhaps 'healthCheckScript' could be replaced by a local variable.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HealthChecker.java:42:	SingularField:	Perhaps 'scriptTimeout' could be replaced by a local variable.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HealthChecker.java:60:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HealthChecker.java:62:	OptimizableToArrayCall:	This call to Collection.toArray() may be optimizable
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HealthChecker.java:64:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HealthChecker.java:75:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HealthChecker.java:78:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/HealthReport.java:83:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition};`
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/JMXListener.java:96:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/JMXListener.java:100:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/JMXListener.java:180:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/JMXListener.java:187:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/JMXListener.java:197:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/LocalHBaseCluster.java:263:	ControlStatementBraces:	This statement should have braces
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/LocalHBaseCluster.java:264:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/LocalHBaseCluster.java:264:	ControlStatementBraces:	This statement should have braces
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/LocalHBaseCluster.java:291:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/LocalHBaseCluster.java:294:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/LocalHBaseCluster.java:362:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/LocalHBaseCluster.java:365:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/LocalHBaseCluster.java:426:	UselessParentheses:	Useless parentheses.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/MetaRegionLocationCache.java:167:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java:183:	EmptyCatchBlock:	Avoid empty catch blocks
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java:388:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java:391:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java:399:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java:501:	AssignmentInOperand:	Avoid assignments in operands
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java:510:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java:789:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java:832:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java:867:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java:907:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java:964:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/Server.java:96:	EmptyCatchBlock:	Avoid empty catch blocks
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/SplitLogCounters.java:48:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/SplitLogCounters.java:110:	UselessParentheses:	Useless parentheses.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/SplitLogTask.java:135:	ControlStatementBraces:	This statement should have braces
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/SslRMIClientSocketFactorySecure.java:36:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/SslRMIClientSocketFactorySecure.java:42:	OptimizableToArrayCall:	This call to Collection.toArray() may be optimizable
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/SslRMIServerSocketFactorySecure.java:37:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/SslRMIServerSocketFactorySecure.java:46:	CloseResource:	Ensure that resources like this Socket object are closed after use
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/SslRMIServerSocketFactorySecure.java:53:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/SslRMIServerSocketFactorySecure.java:59:	OptimizableToArrayCall:	This call to Collection.toArray() may be optimizable
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/ZNodeClearer.java:63:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ZNodeClearer': 'getMyEphemeralNodeFileName' is already in scope
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/ZNodeClearer.java:74:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/ZNodeClearer.java:91:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/ZNodeClearer.java:103:	CloseResource:	Ensure that resources like this FileReader object are closed after use
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/ZNodeClearer.java:107:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'file_content'
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/ZNodeClearer.java:107:	LocalVariableNamingConventions:	The local variable name 'file_content' doesn't match '[a-z][a-zA-Z0-9]*'
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/ZNodeClearer.java:110:	ControlStatementBraces:	This statement should have braces
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/ZNodeClearer.java:145:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/ZNodeClearer.java:164:	UncommentedEmptyMethodBody:	Document empty method body
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/ZNodeClearer.java:179:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ZNodeClearer': 'readMyEphemeralNodeOnDisk' is already in scope
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java:63:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java:121:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java:159:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java:199:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java:201:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java:265:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java:352:	ControlStatementBraces:	This statement should have braces
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java:449:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java:531:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java:568:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java:578:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java:581:	EmptyCatchBlock:	Avoid empty catch blocks
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java:585:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java:592:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java:634:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java:638:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/HFileArchiver.java:760:	ControlStatementBraces:	This statement should have braces
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/example/HFileArchiveManager.java:45:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/example/HFileArchiveManager.java:112:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/example/HFileArchiveManager.java:137:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/example/HFileArchiveTableMonitor.java:55:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/example/LongTermArchivingHFileCleaner.java:74:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/example/LongTermArchivingHFileCleaner.java:78:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/example/LongTermArchivingHFileCleaner.java:95:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/example/LongTermArchivingHFileCleaner.java:96:	IdenticalCatchBranches:	'catch' branch identical to 'KeeperException' branch
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/example/LongTermArchivingHFileCleaner.java:97:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/example/LongTermArchivingHFileCleaner.java:109:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/example/TableHFileArchiveTracker.java:73:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/example/TableHFileArchiveTracker.java:86:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/example/TableHFileArchiveTracker.java:97:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/example/TableHFileArchiveTracker.java:143:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/example/TableHFileArchiveTracker.java:172:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/example/TableHFileArchiveTracker.java:196:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/example/TableHFileArchiveTracker.java:198:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/example/TableHFileArchiveTracker.java:226:	UnnecessaryModifier:	Unnecessary modifier 'final' on method 'getMonitor': the method is already in a final class
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/backup/example/ZKTableArchiveClient.java:24:	UnnecessaryImport:	Unused import 'org.apache.hadoop.hbase.util.Bytes'
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/client/AsyncRegionReplicationRetryingCaller.java:20:	UnnecessaryImport:	Unused static import 'org.apache.hadoop.hbase.util.FutureUtils.addListener'
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/client/AsyncRegionServerAdmin.java:94:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/client/AsyncRegionServerAdmin.java:98:	GenericsNaming:	Generics names should be a one letter long and upper case.
hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/client/AsyncRegionServerAdmin.java:119:	GenericsNaming:	Generics names should be a one letter long and upper case.

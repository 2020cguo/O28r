zookeeper/java/org/apache/zookeeper/ClientCnxn.java:143:	LooseCoupling:	Avoid using implementation types like 'CopyOnWriteArraySet'; use the interface instead
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:153:	LooseCoupling:	Avoid using implementation types like 'LinkedBlockingDeque'; use the interface instead
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:163:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:193:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:213:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:460:	LooseCoupling:	Avoid using implementation types like 'LinkedBlockingQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:466:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:468:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:469:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:527:	CompareObjectsWithEquals:	Use equals() to compare object references.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:545:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:556:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:681:	AssignmentInOperand:	Avoid assignments in operands
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:702:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:723:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:732:	IdenticalCatchBranches:	'catch' branch identical to 'NoWatcherException' branch
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:763:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:784:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:844:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:854:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:856:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:859:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:868:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:874:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:893:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:921:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:964:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:969:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1034:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ClientCnxn': 'SET_WATCHES_XID' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1044:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ClientCnxn': 'AUTHPACKET_XID' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1052:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1057:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ClientCnxn': 'PING_XID' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1115:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1127:	LocalVariableNamingConventions:	The final local variable name 'MAX_SEND_PING_INTERVAL' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1226:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1297:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1353:	FormalParameterNamingConventions:	The method parameter name '_negotiatedSessionTimeout' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1354:	FormalParameterNamingConventions:	The method parameter name '_sessionId' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1355:	FormalParameterNamingConventions:	The method parameter name '_sessionPasswd' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1380:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1382:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1387:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1388:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1396:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1419:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1443:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1461:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1468:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1479:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1635:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ClientCnxn': 'AUTHPACKET_XID' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1671:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ClientCnxn.java:1677:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ClientCnxnSocket.java:72:	LooseCoupling:	Avoid using implementation types like 'LinkedBlockingDeque'; use the interface instead
zookeeper/java/org/apache/zookeeper/ClientCnxnSocket.java:82:	LooseCoupling:	Avoid using implementation types like 'LinkedBlockingDeque'; use the interface instead
zookeeper/java/org/apache/zookeeper/ClientCnxnSocket.java:233:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ClientCnxnSocket.java:240:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/ClientCnxnSocketNIO.java:69:	CloseResource:	Ensure that resources like this SocketChannel object are closed after use
zookeeper/java/org/apache/zookeeper/ClientCnxnSocketNIO.java:157:	LooseCoupling:	Avoid using implementation types like 'LinkedBlockingDeque'; use the interface instead
zookeeper/java/org/apache/zookeeper/ClientCnxnSocketNIO.java:190:	CloseResource:	Ensure that resources like this SocketChannel object are closed after use
zookeeper/java/org/apache/zookeeper/ClientCnxnSocketNIO.java:268:	CloseResource:	Ensure that resources like this SocketChannel object are closed after use
zookeeper/java/org/apache/zookeeper/ClientCnxnSocketNIO.java:308:	CloseResource:	Ensure that resources like this Socket object are closed after use
zookeeper/java/org/apache/zookeeper/ClientCnxnSocketNIO.java:342:	CloseResource:	Ensure that resources like this SocketChannel object are closed after use
zookeeper/java/org/apache/zookeeper/ClientCnxnSocketNIO.java:342:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/ClientCnxnSocketNIO.java:410:	CloseResource:	Ensure that resources like this SocketChannel object are closed after use
zookeeper/java/org/apache/zookeeper/ClientCnxnSocketNetty.java:148:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ClientCnxnSocketNetty.java:182:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ClientCnxnSocketNetty.java:233:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/ClientCnxnSocketNetty.java:406:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/ClientCnxnSocketNetty.java:424:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/ClientCnxnSocketNetty.java:453:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ClientCnxnSocketNetty.java:462:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/ClientCnxnSocketNetty.java:468:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/CreateMode.java:115:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'CreateMode': 'PERSISTENT' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/CreateMode.java:118:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'CreateMode': 'EPHEMERAL' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/CreateMode.java:121:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'CreateMode': 'PERSISTENT_SEQUENTIAL' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/CreateMode.java:124:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'CreateMode': 'EPHEMERAL_SEQUENTIAL' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/CreateMode.java:127:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'CreateMode': 'CONTAINER' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/CreateMode.java:130:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'CreateMode': 'PERSISTENT_WITH_TTL' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/CreateMode.java:133:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'CreateMode': 'PERSISTENT_SEQUENTIAL_WITH_TTL' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/CreateMode.java:148:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'CreateMode': 'PERSISTENT' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/CreateMode.java:151:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'CreateMode': 'EPHEMERAL' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/CreateMode.java:154:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'CreateMode': 'PERSISTENT_SEQUENTIAL' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/CreateMode.java:157:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'CreateMode': 'EPHEMERAL_SEQUENTIAL' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/CreateMode.java:160:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'CreateMode': 'CONTAINER' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/CreateMode.java:163:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'CreateMode': 'PERSISTENT_WITH_TTL' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/CreateMode.java:166:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'CreateMode': 'PERSISTENT_SEQUENTIAL_WITH_TTL' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/CreateOptions.java:29:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/CreateOptions.java:69:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/DeleteContainerRequest.java:30:	UncommentedEmptyConstructor:	Document empty constructor
zookeeper/java/org/apache/zookeeper/Environment.java:31:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/Environment.java:96:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Environment': 'list' is already in scope
zookeeper/java/org/apache/zookeeper/Environment.java:98:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/JLineZNodeCompleter.java:75:	IdenticalCatchBranches:	'catch' branch identical to 'InterruptedException' branch
zookeeper/java/org/apache/zookeeper/JLineZNodeCompleter.java:79:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/KeeperException.java:193:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:199:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:205:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:211:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:217:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:223:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:229:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:235:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:241:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:244:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:251:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:258:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:264:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:270:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:275:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:280:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:287:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:292:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:297:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:302:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:308:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:313:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:318:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/KeeperException.java:324:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/Login.java:112:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/Login.java:119:	AvoidBranchingStatementAsLastInLoop:	Avoid using a branching statement as the last in a loop.
zookeeper/java/org/apache/zookeeper/Login.java:132:	MissingOverride:	The method 'run()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/Login.java:147:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/Login.java:147:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/Login.java:179:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/Login.java:199:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/Login.java:260:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/Login.java:285:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/Login.java:342:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/Login.java:343:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/Login.java:360:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/Login.java:361:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/Login.java:373:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/MultiOperationRecord.java:49:	UncommentedEmptyConstructor:	Document empty constructor
zookeeper/java/org/apache/zookeeper/MultiOperationRecord.java:172:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/Op.java:386:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/Op.java:429:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/Op.java:469:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/Op.java:514:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/Quotas.java:26:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/SaslClientCallbackHandler.java:49:	MissingOverride:	The method 'handle(Callback[])' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/SaslServerPrincipal.java:30:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/SaslServerPrincipal.java:68:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/SaslServerPrincipal.java:88:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'serverPrincipal'
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:33:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:48:	CloseResource:	Ensure that resources like this InputStream object are closed after use
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:49:	CloseResource:	Ensure that resources like this OutputStream object are closed after use
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:82:	CloseResource:	Ensure that resources like this InputStream object are closed after use
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:83:	CloseResource:	Ensure that resources like this OutputStream object are closed after use
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:116:	CloseResource:	Ensure that resources like this InputStream object are closed after use
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:117:	CloseResource:	Ensure that resources like this OutputStream object are closed after use
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:150:	CloseResource:	Ensure that resources like this InputStream object are closed after use
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:151:	CloseResource:	Ensure that resources like this OutputStream object are closed after use
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:186:	CloseResource:	Ensure that resources like this InputStream object are closed after use
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:187:	CloseResource:	Ensure that resources like this OutputStream object are closed after use
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:199:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:225:	CloseResource:	Ensure that resources like this InputStream object are closed after use
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:226:	CloseResource:	Ensure that resources like this OutputStream object are closed after use
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:263:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:265:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:267:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:269:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:271:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ServerAdminClient.java:273:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/Shell.java:73:	MethodNamingConventions:	The static method name 'getGET_PERMISSION_COMMAND' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/Shell.java:102:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
zookeeper/java/org/apache/zookeeper/Shell.java:119:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/Shell.java:179:	CloseResource:	Ensure that resources like this BufferedReader object are closed after use
zookeeper/java/org/apache/zookeeper/Shell.java:180:	CloseResource:	Ensure that resources like this BufferedReader object are closed after use
zookeeper/java/org/apache/zookeeper/Shell.java:202:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/Shell.java:226:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ie' on all code paths
zookeeper/java/org/apache/zookeeper/Shell.java:300:	AvoidStringBufferField:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
zookeeper/java/org/apache/zookeeper/Shell.java:344:	MissingOverride:	The method 'getExecString()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/Shell.java:348:	MissingOverride:	The method 'parseExecResult(BufferedReader)' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/Shell.java:369:	MissingOverride:	The method 'toString()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/StatsTrack.java:189:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
zookeeper/java/org/apache/zookeeper/Testable.java:43:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/Version.java:82:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/Version.java:86:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/Version.java:88:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/Watcher.java:116:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeeperState': 'Unknown' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/Watcher.java:118:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeeperState': 'Disconnected' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/Watcher.java:120:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeeperState': 'NoSyncConnected' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/Watcher.java:122:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeeperState': 'SyncConnected' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/Watcher.java:124:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeeperState': 'AuthFailed' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/Watcher.java:126:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeeperState': 'ConnectedReadOnly' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/Watcher.java:128:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeeperState': 'SaslAuthenticated' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/Watcher.java:130:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeeperState': 'Expired' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/Watcher.java:132:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeeperState': 'Closed' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/Watcher.java:168:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'EventType': 'None' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/Watcher.java:170:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'EventType': 'NodeCreated' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/Watcher.java:172:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'EventType': 'NodeDeleted' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/Watcher.java:174:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'EventType': 'NodeDataChanged' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/Watcher.java:176:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'EventType': 'NodeChildrenChanged' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/Watcher.java:178:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'EventType': 'DataWatchRemoved' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/Watcher.java:180:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'EventType': 'ChildWatchRemoved' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/Watcher.java:182:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'EventType': 'PersistentWatchRemoved' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/Watcher.java:217:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'WatcherType': 'Children' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/Watcher.java:219:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'WatcherType': 'Data' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/Watcher.java:221:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'WatcherType': 'Any' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/ZKUtil.java:40:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/ZKUtil.java:213:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ZKUtil.java:266:	UnnecessaryReturn:	Unnecessary return statement
zookeeper/java/org/apache/zookeeper/ZKWatchManager.java:48:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/ZKWatchManager.java:131:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/ZKWatchManager.java:133:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/ZKWatchManager.java:135:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/ZKWatchManager.java:138:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
zookeeper/java/org/apache/zookeeper/ZKWatchManager.java:205:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/ZKWatchManager.java:212:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/ZKWatchManager.java:235:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
zookeeper/java/org/apache/zookeeper/ZKWatchManager.java:248:	LocalVariableNamingConventions:	The local variable name 'contains_temp' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/ZKWatchManager.java:271:	LocalVariableNamingConventions:	The local variable name 'contains_temp' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/ZKWatchManager.java:276:	LocalVariableNamingConventions:	The local variable name 'contains_temp' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/ZKWatchManager.java:281:	LocalVariableNamingConventions:	The local variable name 'contains_temp' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/ZKWatchManager.java:287:	LocalVariableNamingConventions:	The local variable name 'contains_temp' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/ZKWatchManager.java:329:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/ZooDefs.java:38:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:40:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:42:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:44:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:46:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:48:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:50:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:52:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:54:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:56:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:58:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:60:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:62:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:64:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:66:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:68:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:70:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:72:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:74:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:76:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:78:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:80:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:82:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:84:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:86:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:88:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:90:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:92:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:94:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:96:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:98:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:100:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:102:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:109:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:111:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:113:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:115:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:117:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:119:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:129:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:135:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:141:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
zookeeper/java/org/apache/zookeeper/ZooDefs.java:141:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:147:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
zookeeper/java/org/apache/zookeeper/ZooDefs.java:147:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:153:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
zookeeper/java/org/apache/zookeeper/ZooDefs.java:153:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:159:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooDefs.java:161:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
zookeeper/java/org/apache/zookeeper/ZooKeeper.java:382:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
zookeeper/java/org/apache/zookeeper/ZooKeeper.java:1095:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/ZooKeeper.java:1278:	MissingOverride:	The method 'close()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/ZooKeeper.java:1284:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ZooKeeper.java:1292:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ZooKeeper.java:1645:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ZooKeeper.java:1706:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/ZooKeeper.java:1859:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ZooKeeper.java:2990:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/ZooKeeper.java:3012:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/ZooKeeper.java:3082:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'clientCxnSocket'
zookeeper/java/org/apache/zookeeper/ZooKeeperMain.java:66:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/ZooKeeperMain.java:105:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/ZooKeeperMain.java:109:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ZooKeeperMain': 'printMessage' is already in scope
zookeeper/java/org/apache/zookeeper/ZooKeeperMain.java:110:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ZooKeeperMain': 'printMessage' is already in scope
zookeeper/java/org/apache/zookeeper/ZooKeeperMain.java:173:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ZooKeeperMain.java:175:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ZooKeeperMain.java:177:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ZooKeeperMain.java:179:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ZooKeeperMain.java:181:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ZooKeeperMain.java:341:	CloseResource:	Ensure that resources like this BufferedReader object are closed after use
zookeeper/java/org/apache/zookeeper/ZooKeeperMain.java:356:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ZooKeeperMain.java:393:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ZooKeeperMain.java:396:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ZooKeeperMain.java:402:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ZooKeeperMain.java:407:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ZooKeeperMain.java:414:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ZooKeeperMain.java:418:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ZooKeeperMain.java:420:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/ZookeeperBanner.java:27:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/admin/ZooKeeperAdmin.java:31:	UnnecessaryImport:	Unused import 'org.apache.zookeeper.common.StringUtils'
zookeeper/java/org/apache/zookeeper/admin/ZooKeeperAdmin.java:341:	UselessOverridingMethod:	Overriding method merely calls super
zookeeper/java/org/apache/zookeeper/audit/AuditEvent.java:46:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
zookeeper/java/org/apache/zookeeper/audit/AuditEvent.java:51:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
zookeeper/java/org/apache/zookeeper/audit/AuditEvent.java:86:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
zookeeper/java/org/apache/zookeeper/audit/AuditHelper.java:42:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/audit/AuditHelper.java:118:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
zookeeper/java/org/apache/zookeeper/audit/AuditHelper.java:119:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/audit/AuditHelper.java:132:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'AuditHelper': 'getCreateModes' is already in scope
zookeeper/java/org/apache/zookeeper/audit/AuditLogger.java:25:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/audit/Slf4jAuditLogger.java:33:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/audit/Slf4jAuditLogger.java:35:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/audit/ZKAuditProvider.java:20:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.audit.AuditEvent.FieldName'
zookeeper/java/org/apache/zookeeper/audit/ZKAuditProvider.java:27:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/audit/ZKAuditProvider.java:117:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ZKAuditProvider': 'getZKUser' is already in scope
zookeeper/java/org/apache/zookeeper/cli/AclParser.java:30:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/cli/AddWatchCommand.java:66:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/cli/CommandFactory.java:26:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/cli/CreateCommand.java:83:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/cli/CreateCommand.java:109:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/cli/CreateCommand.java:128:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
zookeeper/java/org/apache/zookeeper/cli/DelQuotaCommand.java:90:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/cli/DelQuotaCommand.java:95:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
zookeeper/java/org/apache/zookeeper/cli/DelQuotaCommand.java:128:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
zookeeper/java/org/apache/zookeeper/cli/DelQuotaCommand.java:130:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ne' on all code paths
zookeeper/java/org/apache/zookeeper/cli/DelQuotaCommand.java:180:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/cli/DeleteAllCommand.java:72:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/cli/DeleteAllCommand.java:82:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
zookeeper/java/org/apache/zookeeper/cli/DeleteCommand.java:89:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
zookeeper/java/org/apache/zookeeper/cli/GetAclCommand.java:71:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
zookeeper/java/org/apache/zookeeper/cli/GetAllChildrenNumberCommand.java:64:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
zookeeper/java/org/apache/zookeeper/cli/GetCommand.java:91:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
zookeeper/java/org/apache/zookeeper/cli/GetConfigCommand.java:36:	SingularField:	Perhaps 'args' could be replaced by a local variable.
zookeeper/java/org/apache/zookeeper/cli/GetEphemeralsCommand.java:66:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
zookeeper/java/org/apache/zookeeper/cli/ListQuotaCommand.java:78:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
zookeeper/java/org/apache/zookeeper/cli/LsCommand.java:110:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
zookeeper/java/org/apache/zookeeper/cli/ReconfigCommand.java:99:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/cli/ReconfigCommand.java:135:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/cli/RemoveWatchesCommand.java:88:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
zookeeper/java/org/apache/zookeeper/cli/SetAclCommand.java:96:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
zookeeper/java/org/apache/zookeeper/cli/SetCommand.java:80:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
zookeeper/java/org/apache/zookeeper/cli/SetQuotaCommand.java:98:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/cli/SetQuotaCommand.java:104:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
zookeeper/java/org/apache/zookeeper/cli/SetQuotaCommand.java:182:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
zookeeper/java/org/apache/zookeeper/cli/SetQuotaCommand.java:209:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/cli/SetQuotaCommand.java:226:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/cli/SetQuotaCommand.java:306:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/cli/SetQuotaCommand.java:315:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/cli/SetQuotaCommand.java:337:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/cli/StatCommand.java:87:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
zookeeper/java/org/apache/zookeeper/cli/SyncCommand.java:74:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
zookeeper/java/org/apache/zookeeper/cli/VersionCommand.java:32:	SingularField:	Perhaps 'args' could be replaced by a local variable.
zookeeper/java/org/apache/zookeeper/client/Chroot.java:141:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} && {thenBranch};`
zookeeper/java/org/apache/zookeeper/client/ConnectStringParser.java:21:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.common.StringUtils.split'
zookeeper/java/org/apache/zookeeper/client/ConnectStringParser.java:44:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
zookeeper/java/org/apache/zookeeper/client/ConnectStringParser.java:96:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
zookeeper/java/org/apache/zookeeper/client/FourLetterWordMain.java:41:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/client/FourLetterWordMain.java:107:	CloseResource:	Ensure that resources like this SSLSocket object are closed after use
zookeeper/java/org/apache/zookeeper/client/FourLetterWordMain.java:117:	CloseResource:	Ensure that resources like this OutputStream object are closed after use
zookeeper/java/org/apache/zookeeper/client/StaticHostProvider.java:72:	SingularField:	Perhaps 'pOld' could be replaced by a local variable.
zookeeper/java/org/apache/zookeeper/client/StaticHostProvider.java:72:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
zookeeper/java/org/apache/zookeeper/client/StaticHostProvider.java:148:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/client/StaticHostProvider.java:313:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java:67:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java:131:	IdenticalCatchBranches:	'catch' branch identical to 'SecurityException' branch
zookeeper/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java:204:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java:208:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java:225:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java:228:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java:268:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java:275:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java:287:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java:287:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java:291:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java:317:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'retval'
zookeeper/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java:318:	MissingOverride:	The method 'run()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java:319:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java:329:	LocalVariableNamingConventions:	The final local variable name 'UNKNOWN_SERVER_ERROR_TEXT' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java:348:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/client/ZooKeeperSaslClient.java:363:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/AtomicFileOutputStream.java:77:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
zookeeper/java/org/apache/zookeeper/common/AtomicFileWritingIdiom.java:69:	CloseResource:	Ensure that resources like this BufferedWriter object are closed after use
zookeeper/java/org/apache/zookeeper/common/BCFKSFileLoader.java:25:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/common/ClientX509Util.java:72:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/ClientX509Util.java:195:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/FileChangeWatcher.java:69:	CloseResource:	Ensure that resources like this FileSystem object are closed after use
zookeeper/java/org/apache/zookeeper/common/FileChangeWatcher.java:70:	CloseResource:	Ensure that resources like this WatchService object are closed after use
zookeeper/java/org/apache/zookeeper/common/FileChangeWatcher.java:184:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/FileChangeWatcher.java:204:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/FileChangeWatcher.java:215:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/FileChangeWatcher.java:219:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/FileChangeWatcher.java:222:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
zookeeper/java/org/apache/zookeeper/common/FileKeyStoreLoader.java:52:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
zookeeper/java/org/apache/zookeeper/common/FileKeyStoreLoader.java:52:	UncommentedEmptyConstructor:	Document empty constructor
zookeeper/java/org/apache/zookeeper/common/FileKeyStoreLoaderBuilderProvider.java:23:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/common/IOUtils.java:33:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/common/IOUtils.java:56:	CloseResource:	Ensure that resources like this Closeable object are closed after use
zookeeper/java/org/apache/zookeeper/common/IOUtils.java:62:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/JKSFileLoader.java:25:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/common/KeyStoreFileType.java:65:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
zookeeper/java/org/apache/zookeeper/common/KeyStoreFileType.java:84:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeyStoreFileType': 'values' is already in scope
zookeeper/java/org/apache/zookeeper/common/KeyStoreFileType.java:110:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeyStoreFileType': 'fromPropertyValue' is already in scope
zookeeper/java/org/apache/zookeeper/common/KeyStoreFileType.java:112:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'KeyStoreFileType': 'fromFilename' is already in scope
zookeeper/java/org/apache/zookeeper/common/NetUtils.java:28:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/common/NettyUtils.java:44:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/common/NettyUtils.java:147:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/NettyUtils.java:148:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/common/PEMFileLoader.java:31:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/common/PKCS12FileLoader.java:25:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/common/PathTrie.java:63:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/common/PathTrie.java:326:	CompareObjectsWithEquals:	Use equals() to compare object references.
zookeeper/java/org/apache/zookeeper/common/PathUtils.java:24:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/common/PathUtils.java:104:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'java.lang': 'System' is already in scope because it is declared in java.lang
zookeeper/java/org/apache/zookeeper/common/PathUtils.java:105:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
zookeeper/java/org/apache/zookeeper/common/SSLContextAndOptions.java:119:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/SSLContextAndOptions.java:127:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/SSLContextAndOptions.java:183:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/SecretUtils.java:48:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
zookeeper/java/org/apache/zookeeper/common/StringUtils.java:25:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/common/Time.java:23:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/common/X509Util.java:107:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/common/X509Util.java:178:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
zookeeper/java/org/apache/zookeeper/common/X509Util.java:364:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/X509Util.java:409:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/X509Util.java:431:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/X509Util.java:732:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/X509Util.java:742:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/ZKConfig.java:85:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/ZKConfig.java:197:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/ZKConfig.java:199:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/common/ZKConfig.java:211:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/common/ZKHostnameVerifier.java:66:	MethodNamingConventions:	The static method name 'IP' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/common/ZKHostnameVerifier.java:70:	MethodNamingConventions:	The static method name 'DNS' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/common/ZKHostnameVerifier.java:101:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/common/ZKHostnameVerifier.java:103:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
zookeeper/java/org/apache/zookeeper/common/ZKHostnameVerifier.java:189:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
zookeeper/java/org/apache/zookeeper/common/ZKHostnameVerifier.java:203:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
zookeeper/java/org/apache/zookeeper/common/ZKHostnameVerifier.java:221:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
zookeeper/java/org/apache/zookeeper/common/ZKHostnameVerifier.java:290:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/common/ZKHostnameVerifier.java:292:	IdenticalCatchBranches:	'catch' branch identical to 'NoSuchElementException' branch
zookeeper/java/org/apache/zookeeper/common/ZKHostnameVerifier.java:292:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/common/ZKHostnameVerifier.java:299:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/common/ZKHostnameVerifier.java:331:	EmptyControlStatement:	Empty if statement
zookeeper/java/org/apache/zookeeper/common/ZKTrustManager.java:193:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'addressVerificationException' on all code paths
zookeeper/java/org/apache/zookeeper/compat/ProtocolManager.java:33:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/jmx/MBeanRegistry.java:46:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/jmx/MBeanRegistry.java:110:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/jmx/MBeanRegistry.java:153:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/jmx/MBeanRegistry.java:154:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
zookeeper/java/org/apache/zookeeper/jmx/MBeanRegistry.java:155:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/jmx/MBeanRegistry.java:166:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/jmx/MBeanRegistry.java:166:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/jmx/MBeanRegistry.java:218:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/jmx/ManagedUtil.java:31:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/jmx/ManagedUtil.java:110:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/metrics/MetricsProviderLifeCycleException.java:30:	UncommentedEmptyConstructor:	Document empty constructor
zookeeper/java/org/apache/zookeeper/metrics/impl/DefaultMetricsProvider.java:54:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/metrics/impl/DefaultMetricsProvider.java:58:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/metrics/impl/NullMetricsProvider.java:44:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/metrics/impl/NullMetricsProvider.java:48:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/metrics/impl/NullMetricsProvider.java:57:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/metrics/impl/NullMetricsProvider.java:61:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/metrics/impl/NullMetricsProvider.java:65:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/metrics/impl/NullMetricsProvider.java:88:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/metrics/impl/NullMetricsProvider.java:92:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/metrics/impl/NullMetricsProvider.java:96:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/metrics/impl/NullMetricsProvider.java:100:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/metrics/impl/NullMetricsProvider.java:120:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/metrics/impl/NullMetricsProvider.java:135:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/metrics/impl/NullMetricsProvider.java:144:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/metrics/impl/NullMetricsProvider.java:154:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/BlueThrottle.java:303:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BlueThrottle': 'DEFAULT_GLOBAL_SESSION_WEIGHT' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/BlueThrottle.java:307:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BlueThrottle': 'DEFAULT_LOCAL_SESSION_WEIGHT' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/BlueThrottle.java:311:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BlueThrottle': 'DEFAULT_RENEW_SESSION_WEIGHT' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/BlueThrottle.java:315:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BlueThrottle': 'connectionWeightEnabled' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/BlueThrottle.java:363:	LogicInversion:	Use opposite operator instead of the logic complement operator.
zookeeper/java/org/apache/zookeeper/server/ByteBufferRequestRecord.java:30:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/ConnectionBean.java:92:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
zookeeper/java/org/apache/zookeeper/server/ConnectionBean.java:103:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ContainerManager.java:101:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
zookeeper/java/org/apache/zookeeper/server/DataNode.java:43:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/DataNode.java:47:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/DataNode.java:116:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
zookeeper/java/org/apache/zookeeper/server/DataNode.java:127:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/DataTree.java:154:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/DataTree.java:180:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/DataTree.java:188:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/DataTree.java:194:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/DataTree.java:229:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/DataTree.java:492:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/DataTree.java:522:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/DataTree.java:600:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/DataTree.java:837:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/DataTree.java:859:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
zookeeper/java/org/apache/zookeeper/server/DataTree.java:970:	LocalVariableNamingConventions:	The local variable name 'post_failed' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/server/DataTree.java:1056:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/DataTree.java:1067:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/DataTree.java:1142:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/DataTree.java:1182:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/server/DataTree.java:1370:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/DataTree.java:1443:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/DataTree.java:1469:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/DataTree.java:1560:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
zookeeper/java/org/apache/zookeeper/server/DataTree.java:1586:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
zookeeper/java/org/apache/zookeeper/server/DataTree.java:1781:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/DataTree.java:1839:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/DigestCalculator.java:80:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/DumbWatcher.java:50:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/DumbWatcher.java:79:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/DumbWatcher.java:89:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/DumbWatcher.java:98:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/DumbWatcher.java:102:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/DumbWatcher.java:106:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/DumbWatcher.java:110:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/DumbWatcher.java:140:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
zookeeper/java/org/apache/zookeeper/server/DumbWatcher.java:144:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/EphemeralType.java:202:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'EphemeralType': 'MAX_EXTENDED_SERVER_ID' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/EphemeralType.java:205:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'EphemeralType': 'MAX_EXTENDED_SERVER_ID' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/ExpiryQueue.java:37:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/ExpiryQueue.java:43:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/ExpiryQueue.java:161:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/FinalRequestProcessor.java:214:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
zookeeper/java/org/apache/zookeeper/server/FinalRequestProcessor.java:578:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/FinalRequestProcessor.java:663:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxn.java:41:	UnnecessaryImport:	Unused import 'org.apache.zookeeper.data.Id'
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxn.java:248:	CompareObjectsWithEquals:	Use equals() to compare object references.
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxn.java:297:	CompareObjectsWithEquals:	Use equals() to compare object references.
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxn.java:328:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxn.java:339:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxn.java:347:	CompareObjectsWithEquals:	Use equals() to compare object references.
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxn.java:372:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxn.java:387:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxn.java:390:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxn.java:451:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxn.java:453:	AvoidStringBufferField:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxn.java:529:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxn.java:556:	UnusedFormalParameter:	Avoid unused method parameters such as 'k'.
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java:167:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java:224:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java:241:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java:258:	CloseResource:	Ensure that resources like this SocketChannel object are closed after use
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java:272:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java:320:	UnusedPrivateField:	Avoid unused private fields such as 'id'.
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java:387:	CloseResource:	Ensure that resources like this SocketChannel object are closed after use
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java:406:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java:420:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java:450:	CloseResource:	Ensure that resources like this SocketChannel object are closed after use
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java:590:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java:601:	SingularField:	Perhaps 'numSelectorThreads' could be replaced by a local variable.
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java:610:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java:610:	UncommentedEmptyConstructor:	Document empty constructor
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java:613:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java:668:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java:684:	CloseResource:	Ensure that resources like this ServerSocketChannel object are closed after use
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java:851:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NIOServerCnxnFactory.java:949:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxn.java:46:	UnnecessaryImport:	Unused import 'org.apache.zookeeper.data.Id'
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxn.java:70:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxn.java:77:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxn.java:109:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxn.java:120:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxn.java:127:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxn.java:180:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxn.java:229:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxn.java:231:	AvoidStringBufferField:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxn.java:296:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxn.java:353:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxn.java:487:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxn.java:530:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxn.java:542:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxn.java:548:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxn.java:571:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxn.java:579:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxn.java:636:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:147:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:169:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:179:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:232:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:271:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:277:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:350:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:415:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:455:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:466:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:540:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:593:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:596:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:611:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:615:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:626:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:720:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:740:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/NodeHashMapImpl.java:33:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/PrepRequestProcessor.java:104:	LooseCoupling:	Avoid using implementation types like 'LinkedBlockingQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/PrepRequestProcessor.java:138:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/PrepRequestProcessor.java:305:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/PrepRequestProcessor.java:416:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/PrepRequestProcessor.java:448:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/PrepRequestProcessor.java:505:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/PrepRequestProcessor.java:677:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/server/PrepRequestProcessor.java:724:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/PrepRequestProcessor.java:725:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ie' on all code paths
zookeeper/java/org/apache/zookeeper/server/PrepRequestProcessor.java:914:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/PrepRequestProcessor.java:924:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/PrepRequestProcessor.java:936:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/PrepRequestProcessor.java:953:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/PrepRequestProcessor.java:969:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/PrepRequestProcessor.java:997:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/server/PrepRequestProcessor.java:1010:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/PrepRequestProcessor.java:1010:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/PrepRequestProcessor.java:1012:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/PrepRequestProcessor.java:1019:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/PurgeTxnLog.java:46:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/server/PurgeTxnLog.java:125:	MissingOverride:	The method 'accept(File)' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/ReferenceCountedACLCache.java:85:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
zookeeper/java/org/apache/zookeeper/server/ReferenceCountedACLCache.java:106:	LooseCoupling:	Avoid using implementation types like 'LinkedHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/ReferenceCountedACLCache.java:237:	SuspiciousEqualsMethodName:	The method name and parameter number are suspiciously close to equals(Object)
zookeeper/java/org/apache/zookeeper/server/Request.java:55:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/Request.java:59:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/Request.java:109:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
zookeeper/java/org/apache/zookeeper/server/Request.java:117:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/Request.java:174:	UnnecessaryAnnotationValueElement:	Avoid the use of value in annotations when its the only element
zookeeper/java/org/apache/zookeeper/server/Request.java:177:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
zookeeper/java/org/apache/zookeeper/server/Request.java:293:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/Request.java:477:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/server/RequestThrottler.java:64:	LooseCoupling:	Avoid using implementation types like 'LinkedBlockingQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/RequestThrottler.java:67:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/RequestThrottler.java:68:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/RequestThrottler.java:84:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/RequestThrottler.java:90:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/RequestThrottler.java:99:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/RequestThrottler.java:207:	UseNotifyAllInsteadOfNotify:	Call Thread.notifyAll() rather than Thread.notify()
zookeeper/java/org/apache/zookeeper/server/RequestThrottler.java:262:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/RequestThrottler.java:271:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ResponseCache.java:35:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/server/ResponseCache.java:62:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
zookeeper/java/org/apache/zookeeper/server/ResponseCache.java:67:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
zookeeper/java/org/apache/zookeeper/server/ResponseCache.java:86:	MissingOverride:	The method 'removeEldestEntry(Entry<K, V>)' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/ServerCnxn.java:127:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/ServerCnxn.java:134:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/ServerCnxn.java:202:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
zookeeper/java/org/apache/zookeeper/server/ServerCnxn.java:319:	MissingOverride:	The method 'toString()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/ServerCnxnFactory.java:60:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/ServerCnxnFactory.java:201:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/ServerCnxnFactory.java:277:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/ServerCnxnFactory.java:326:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ServerCnxnHelper.java:21:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/server/ServerMetrics.java:52:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/ServerStats.java:33:	UnusedPrivateField:	Avoid unused private fields such as 'LOG'.
zookeeper/java/org/apache/zookeeper/server/SessionTrackerImpl.java:49:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/SessionTrackerImpl.java:80:	MissingOverride:	The method 'toString()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/SessionTrackerImpl.java:100:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/SessionTrackerImpl.java:123:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/SessionTrackerImpl.java:238:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/SessionTrackerImpl.java:284:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/SessionTrackerImpl.java:309:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/SessionTrackerImpl.java:322:	CompareObjectsWithEquals:	Use equals() to compare object references.
zookeeper/java/org/apache/zookeeper/server/SessionTrackerImpl.java:339:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/SimpleRequestRecord.java:34:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/SnapshotComparer.java:49:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/server/SnapshotComparer.java:155:	MissingOverride:	The method 'compare(TreeNode, TreeNode)' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/SnapshotComparer.java:156:	CompareObjectsWithEquals:	Use equals() to compare object references.
zookeeper/java/org/apache/zookeeper/server/SnapshotComparer.java:211:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/SnapshotComparer.java:227:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/SnapshotComparer.java:240:	MissingOverride:	The method 'toString()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/SnapshotComparer.java:251:	MethodNamingConventions:	The static method name 'MakeAlphabeticComparator' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/server/SnapshotComparer.java:264:	CloseResource:	Ensure that resources like this CheckedInputStream object are closed after use
zookeeper/java/org/apache/zookeeper/server/SnapshotComparer.java:271:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/SnapshotComparer.java:290:	CloseResource:	Ensure that resources like this Scanner object are closed after use
zookeeper/java/org/apache/zookeeper/server/SnapshotFormatter.java:21:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.server.persistence.FileSnap.SNAPSHOT_FILE_PREFIX'
zookeeper/java/org/apache/zookeeper/server/SnapshotFormatter.java:62:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/SnapshotFormatter.java:64:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/SnapshotFormatter.java:150:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/SnapshotFormatter.java:200:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/SnapshotFormatter.java:223:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/server/SnapshotFormatter.java:226:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/SnapshotRecursiveSummary.java:97:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/server/SnapshotRecursiveSummary.java:103:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/SyncRequestProcessor.java:128:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
zookeeper/java/org/apache/zookeeper/server/SyncRequestProcessor.java:221:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
zookeeper/java/org/apache/zookeeper/server/SyncRequestProcessor.java:261:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/TraceFormatter.java:30:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/server/TraceFormatter.java:41:	CloseResource:	Ensure that resources like this FileChannel object are closed after use
zookeeper/java/org/apache/zookeeper/server/UnimplementedRequestProcessor.java:45:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/WorkerService.java:50:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/WorkerService.java:56:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/WorkerService.java:88:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/WorkerService.java:181:	AvoidThreadGroup:	Avoid using java.lang.ThreadGroup; it is not thread safe
zookeeper/java/org/apache/zookeeper/server/WorkerService.java:181:	AvoidThreadGroup:	Avoid using java.lang.ThreadGroup; it is not thread safe
zookeeper/java/org/apache/zookeeper/server/WorkerService.java:185:	MissingOverride:	The method 'newThread(Runnable)' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/WorkerService.java:230:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/server/ZKDatabase.java:82:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/ZKDatabase.java:84:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
zookeeper/java/org/apache/zookeeper/server/ZKDatabase.java:98:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/ZKDatabase.java:270:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/ZKDatabase.java:292:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZKDatabase.java:389:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:137:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:151:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:179:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ZooKeeperServer': 'enableEagerACLCheck' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:188:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ZooKeeperServer': 'closeSessionTxnEnabled' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:189:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:190:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ZooKeeperServer': 'closeSessionTxnEnabled' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:199:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:216:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:252:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:255:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:257:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:259:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:318:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:324:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:607:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:617:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:637:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:708:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:730:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:738:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1140:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1180:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1188:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1216:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1282:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1406:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1415:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1479:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1505:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1543:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1551:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1655:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1708:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1726:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1733:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1747:	UnnecessaryReturn:	Unnecessary return statement
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1754:	UnnecessaryReturn:	Unnecessary return statement
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1799:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1810:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1816:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1823:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1850:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1869:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1888:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1893:	CompareObjectsWithEquals:	Use equals() to compare object references.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:1916:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:2088:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:2092:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:2099:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:2099:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:2274:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:2373:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:2375:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServer.java:2376:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServerMain.java:208:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
zookeeper/java/org/apache/zookeeper/server/ZooKeeperServerMain.java:298:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/ZooKeeperThread.java:32:	SingularField:	Perhaps 'uncaughtExceptionalHandler' could be replaced by a local variable.
zookeeper/java/org/apache/zookeeper/server/ZooTrace.java:32:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/server/ZooTrace.java:68:	LocalVariableNamingConventions:	The final local variable name 'LOG' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/server/ZooTrace.java:69:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/admin/AdminServerFactory.java:28:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/server/admin/AdminServerFactory.java:49:	IdenticalCatchBranches:	'catch' branch identical to 'ClassNotFoundException' branch
zookeeper/java/org/apache/zookeeper/server/admin/AdminServerFactory.java:51:	IdenticalCatchBranches:	'catch' branch identical to 'ClassNotFoundException' branch
zookeeper/java/org/apache/zookeeper/server/admin/AdminServerFactory.java:53:	IdenticalCatchBranches:	'catch' branch identical to 'ClassNotFoundException' branch
zookeeper/java/org/apache/zookeeper/server/admin/AdminServerFactory.java:55:	IdenticalCatchBranches:	'catch' branch identical to 'ClassNotFoundException' branch
zookeeper/java/org/apache/zookeeper/server/admin/CommandOutputter.java:36:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/admin/CommandOutputter.java:39:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/admin/Commands.java:21:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.server.persistence.FileSnap.SNAPSHOT_FILE_PREFIX'
zookeeper/java/org/apache/zookeeper/server/admin/Commands.java:83:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/server/admin/Commands.java:106:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/admin/Commands.java:222:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/admin/Commands.java:1107:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/admin/DummyAdminServer.java:33:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/admin/DummyAdminServer.java:37:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/admin/DummyAdminServer.java:41:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/admin/JettyAdminServer.java:74:	AvoidUsingHardCodedIP:	Do not hard code the IP address DEFAULT_ADDRESS
zookeeper/java/org/apache/zookeeper/server/admin/JettyAdminServer.java:138:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
zookeeper/java/org/apache/zookeeper/server/admin/JettyAdminServer.java:239:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/server/admin/JettyAdminServer.java:249:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/admin/JettyAdminServer.java:314:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/admin/JsonOutputter.java:60:	IdenticalCatchBranches:	'catch' branch identical to 'JsonGenerationException' branch
zookeeper/java/org/apache/zookeeper/server/admin/StreamOutputter.java:46:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'is': resource specifications are implicitly final
zookeeper/java/org/apache/zookeeper/server/admin/UnifiedConnectionFactory.java:83:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/auth/DigestAuthenticationProvider.java:49:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/auth/DigestAuthenticationProvider.java:173:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
zookeeper/java/org/apache/zookeeper/server/auth/DigestAuthenticationProvider.java:183:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/auth/DigestLoginModule.java:28:	SingularField:	Perhaps 'subject' could be replaced by a local variable.
zookeeper/java/org/apache/zookeeper/server/auth/DigestLoginModule.java:30:	MissingOverride:	The method 'abort()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/auth/DigestLoginModule.java:34:	MissingOverride:	The method 'commit()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/auth/DigestLoginModule.java:38:	MissingOverride:	The method 'initialize(Subject, CallbackHandler, Map<String, ?>, Map<String, ?>)' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/auth/DigestLoginModule.java:51:	UnnecessaryReturn:	Unnecessary return statement
zookeeper/java/org/apache/zookeeper/server/auth/DigestLoginModule.java:54:	MissingOverride:	The method 'logout()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/auth/DigestLoginModule.java:58:	MissingOverride:	The method 'login()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/auth/IPAuthenticationProvider.java:56:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'b'
zookeeper/java/org/apache/zookeeper/server/auth/IPAuthenticationProvider.java:64:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
zookeeper/java/org/apache/zookeeper/server/auth/IPAuthenticationProvider.java:73:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
zookeeper/java/org/apache/zookeeper/server/auth/IPAuthenticationProvider.java:76:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
zookeeper/java/org/apache/zookeeper/server/auth/KerberosName.java:86:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/auth/KerberosName.java:86:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/auth/KerberosName.java:99:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/auth/KerberosName.java:261:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/auth/KeyAuthenticationProvider.java:72:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
zookeeper/java/org/apache/zookeeper/server/auth/ProviderRegistry.java:28:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/server/auth/SASLAuthenticationProvider.java:39:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/auth/SASLAuthenticationProvider.java:39:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/auth/SASLAuthenticationProvider.java:43:	UnusedNullCheckInEquals:	Invoke equals() on the object you've already ensured is not null
zookeeper/java/org/apache/zookeeper/server/auth/SaslServerCallbackHandler.java:75:	MissingOverride:	The method 'handle(Callback[])' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/auth/SaslServerCallbackHandler.java:92:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/auth/SaslServerCallbackHandler.java:111:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/auth/WrappedAuthenticationProvider.java:31:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/server/auth/X509AuthenticationProvider.java:155:	OptimizableToArrayCall:	This call to Collection.toArray() may be optimizable
zookeeper/java/org/apache/zookeeper/server/auth/X509AuthenticationProvider.java:159:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/auth/X509AuthenticationProvider.java:271:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/command/FourLetterCommands.java:33:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/server/command/FourLetterCommands.java:203:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/command/FourLetterCommands.java:217:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/command/FourLetterCommands.java:223:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/command/FourLetterCommands.java:224:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/command/MonitorCommand.java:44:	UnusedPrivateMethod:	Avoid unused private methods such as 'print(String, Object)'.
zookeeper/java/org/apache/zookeeper/server/command/StatCommand.java:64:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/command/StatResetCommand.java:39:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/controller/CommandClient.java:103:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/controller/CommandClient.java:128:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/controller/CommandListener.java:70:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/server/controller/ControlCommand.java:120:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
zookeeper/java/org/apache/zookeeper/server/controller/ControllableConnectionFactory.java:41:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
zookeeper/java/org/apache/zookeeper/server/controller/ControllableConnectionFactory.java:41:	UncommentedEmptyConstructor:	Document empty constructor
zookeeper/java/org/apache/zookeeper/server/controller/ControllerServerConfig.java:137:	CloseResource:	Ensure that resources like this ServerSocket object are closed after use
zookeeper/java/org/apache/zookeeper/server/controller/ControllerServerConfig.java:140:	CloseResource:	Ensure that resources like this ServerSocket object are closed after use
zookeeper/java/org/apache/zookeeper/server/controller/ControllerService.java:42:	UnusedPrivateField:	Avoid unused private fields such as 'serverCnxnFactory'.
zookeeper/java/org/apache/zookeeper/server/controller/ControllerService.java:76:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/server/controller/ZooKeeperServerController.java:100:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbeddedImpl.java:44:	SingularField:	Perhaps 'thread' could be replaced by a local variable.
zookeeper/java/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbeddedImpl.java:45:	SingularField:	Perhaps 'purgeMgr' could be replaced by a local variable.
zookeeper/java/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbeddedImpl.java:47:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbeddedImpl.java:61:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbeddedImpl.java:64:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbeddedImpl.java:65:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbeddedImpl.java:66:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbeddedImpl.java:67:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbeddedImpl.java:68:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbeddedImpl.java:69:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbeddedImpl.java:70:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbeddedImpl.java:71:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbeddedImpl.java:72:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbeddedImpl.java:75:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbeddedImpl.java:112:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbeddedImpl.java:135:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
zookeeper/java/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbeddedImpl.java:172:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
zookeeper/java/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbeddedImpl.java:206:	AvoidUsingHardCodedIP:	Do not hard code the IP address ${variableName}
zookeeper/java/org/apache/zookeeper/server/embedded/ZooKeeperServerEmbeddedImpl.java:207:	AvoidUsingHardCodedIP:	Do not hard code the IP address ${variableName}
zookeeper/java/org/apache/zookeeper/server/metric/AvgMinMaxCounter.java:53:	EmptyControlStatement:	Empty while statement
zookeeper/java/org/apache/zookeeper/server/metric/AvgMinMaxCounter.java:60:	EmptyControlStatement:	Empty while statement
zookeeper/java/org/apache/zookeeper/server/metric/AvgMinMaxCounter.java:72:	AvoidDecimalLiteralsInBigDecimalConstructor:	Avoid creating BigDecimal with a decimal (float/double) literal. Use a String literal
zookeeper/java/org/apache/zookeeper/server/metric/AvgMinMaxCounterSet.java:35:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/metric/AvgMinMaxPercentileCounter.java:51:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/metric/AvgMinMaxPercentileCounter.java:76:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
zookeeper/java/org/apache/zookeeper/server/metric/AvgMinMaxPercentileCounter.java:80:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/metric/AvgMinMaxPercentileCounterSet.java:35:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/metric/Metric.java:25:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/metric/Metric.java:27:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/metric/Metric.java:29:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/metric/Metric.java:31:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/metric/SimpleCounterSet.java:32:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/persistence/FileSnap.java:49:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/persistence/FileSnap.java:78:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/server/persistence/FileSnap.java:139:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'FileSnap': 'SNAP_MAGIC' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/persistence/FileSnap.java:150:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:134:	AssignmentInOperand:	Avoid assignments in operands
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:150:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:151:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:152:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:155:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:163:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:259:	MissingOverride:	The method 'close()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:263:	CloseResource:	Ensure that resources like this FileOutputStream object are closed after use
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:275:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:284:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:398:	CloseResource:	Ensure that resources like this FileOutputStream object are closed after use
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:403:	CloseResource:	Ensure that resources like this FileChannel object are closed after use
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:476:	CloseResource:	it is recommended to wrap resource 'input' in try-with-resource declaration directly
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:484:	CloseResource:	it is recommended to wrap resource 'raf' in try-with-resource declaration directly
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:489:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:567:	MissingOverride:	The method 'read(byte[])' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:631:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:675:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'FileTxnLog': 'getLogFiles' is already in scope
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:709:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:726:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'FileTxnLog': 'TXNLOG_MAGIC' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:729:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'FileTxnLog': 'TXNLOG_MAGIC' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnLog.java:792:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java:345:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java:452:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java:476:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java:480:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java:492:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java:494:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java:496:	EmptyControlStatement:	Empty else statement
zookeeper/java/org/apache/zookeeper/server/persistence/SnapStream.java:50:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/server/persistence/SnapStream.java:103:	CloseResource:	Ensure that resources like this FileInputStream object are closed after use
zookeeper/java/org/apache/zookeeper/server/persistence/SnapStream.java:133:	CloseResource:	Ensure that resources like this OutputStream object are closed after use
zookeeper/java/org/apache/zookeeper/server/persistence/SnapStream.java:251:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/persistence/SnapStream.java:260:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/persistence/SnapStream.java:277:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/persistence/SnapStream.java:285:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/persistence/SnapStream.java:314:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/persistence/SnapStream.java:321:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/persistence/SnapStream.java:321:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/persistence/TxnLog.java:104:	MissingOverride:	The method 'close()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/persistence/TxnLog.java:150:	MissingOverride:	The method 'close()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/persistence/TxnLogToolkit.java:21:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.server.persistence.FileTxnLog.TXNLOG_MAGIC'
zookeeper/java/org/apache/zookeeper/server/persistence/TxnLogToolkit.java:121:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'lt': resource specifications are implicitly final
zookeeper/java/org/apache/zookeeper/server/persistence/TxnLogToolkit.java:273:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
zookeeper/java/org/apache/zookeeper/server/persistence/TxnLogToolkit.java:324:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/persistence/TxnLogToolkit.java:329:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/persistence/TxnLogToolkit.java:333:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/persistence/TxnLogToolkit.java:337:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/persistence/TxnLogToolkit.java:342:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/persistence/TxnLogToolkit.java:432:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/persistence/Util.java:46:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/server/persistence/Util.java:144:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/server/persistence/Util.java:167:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
zookeeper/java/org/apache/zookeeper/server/persistence/Util.java:170:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/server/persistence/Util.java:172:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
zookeeper/java/org/apache/zookeeper/server/persistence/Util.java:225:	MissingOverride:	The method 'compare(File, File)' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/persistence/Util.java:226:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Util': 'getZxidFromName' is already in scope
zookeeper/java/org/apache/zookeeper/server/persistence/Util.java:227:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Util': 'getZxidFromName' is already in scope
zookeeper/java/org/apache/zookeeper/server/persistence/Util.java:228:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/quorum/CommitProcessor.java:93:	LooseCoupling:	Avoid using implementation types like 'LinkedBlockingQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/CommitProcessor.java:99:	LooseCoupling:	Avoid using implementation types like 'LinkedBlockingQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/CommitProcessor.java:114:	LooseCoupling:	Avoid using implementation types like 'LinkedBlockingQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/CommitProcessor.java:129:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/CommitProcessor.java:130:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/CommitProcessor.java:142:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/CommitProcessor.java:150:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/CommitProcessor.java:415:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
zookeeper/java/org/apache/zookeeper/server/quorum/CommitProcessor.java:422:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/quorum/CommitProcessor.java:450:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:156:	ClassNamingConventions:	The enum name 'mType' doesn't match '[A-Z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:163:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'type'.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:204:	LooseCoupling:	Avoid using implementation types like 'LinkedBlockingQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:205:	LooseCoupling:	Avoid using implementation types like 'LinkedBlockingQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:223:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:247:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:254:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:257:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:283:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:286:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:309:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:314:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:324:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:328:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:332:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:335:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:359:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:402:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:402:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:447:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:485:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:662:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:675:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:724:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:731:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:743:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:817:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:842:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:845:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:888:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:946:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:1010:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:1024:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:1034:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:1069:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:1119:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:1124:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:1127:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java:1141:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Follower.java:77:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Follower.java:99:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Follower.java:169:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Follower.java:244:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FollowerRequestProcessor.java:50:	LooseCoupling:	Avoid using implementation types like 'LinkedBlockingQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/FollowerRequestProcessor.java:96:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
zookeeper/java/org/apache/zookeeper/server/quorum/FollowerRequestProcessor.java:124:	IdenticalCatchBranches:	'catch' branch identical to 'RuntimeException' branch
zookeeper/java/org/apache/zookeeper/server/quorum/FollowerZooKeeperServer.java:55:	LooseCoupling:	Avoid using implementation types like 'ConcurrentLinkedQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/FollowerZooKeeperServer.java:80:	LooseCoupling:	Avoid using implementation types like 'LinkedBlockingQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/FollowerZooKeeperServer.java:98:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/server/quorum/FollowerZooKeeperServer.java:99:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FollowerZooKeeperServer.java:104:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/FollowerZooKeeperServer.java:114:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/server/quorum/FollowerZooKeeperServer.java:130:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'globalOutstandingLimit'
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:83:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:126:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:129:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:138:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:150:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:183:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:272:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:328:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:438:	LooseCoupling:	Avoid using implementation types like 'ConcurrentLinkedQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:517:	CloseResource:	Ensure that resources like this Socket object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:527:	CloseResource:	Ensure that resources like this BufferedInputStream object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:549:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:591:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:620:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:646:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:675:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:715:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:849:	CloseResource:	Ensure that resources like this ServerSocket object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:883:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:938:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:942:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:954:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:967:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:1024:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:1029:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:1038:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:1170:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Leader': 'COMMIT' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:1185:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Leader': 'COMMITANDACTIVATE' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:1193:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Leader': 'INFORM' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:1203:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Leader': 'INFORMANDACTIVATE' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:1259:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Leader': 'PROPOSAL' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:1304:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Leader': 'SYNC' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:1327:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Leader': 'COMMIT' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:1363:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:1364:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:1365:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:1378:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:1503:	UnusedPrivateMethod:	Avoid unused private methods such as 'getSidSetString(Set<Long>)'.
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:1522:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:1579:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Leader.java:1740:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LeaderSessionTracker.java:89:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LeaderSessionTracker.java:104:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LeaderSessionTracker.java:127:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
zookeeper/java/org/apache/zookeeper/server/quorum/LeaderSessionTracker.java:154:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/server/quorum/LeaderSessionTracker.java:162:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/server/quorum/LeaderSessionTracker.java:180:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/quorum/LeaderSessionTracker.java:189:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java:168:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'globalOutstandingLimit'
zookeeper/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java:304:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/server/quorum/Learner.java:120:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/Learner.java:136:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/Learner.java:161:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Learner.java:283:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Learner.java:376:	CloseResource:	Ensure that resources like this Socket object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/Learner.java:561:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Learner.java:572:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Learner.java:584:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/Learner.java:595:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Learner.java:599:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Learner.java:605:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Learner.java:616:	LocalVariableNamingConventions:	The local variable name 'isPreZAB1_0' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/server/quorum/Learner.java:625:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
zookeeper/java/org/apache/zookeeper/server/quorum/Learner.java:633:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Learner.java:663:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Learner.java:700:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Learner.java:800:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Learner.java:824:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:93:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:117:	LooseCoupling:	Avoid using implementation types like 'LinkedBlockingQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:125:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:142:	FinalFieldCouldBeStatic:	This final field could be made static
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:153:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:185:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:199:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:233:	SingularField:	Perhaps 'ia' could be replaced by a local variable.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:253:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:294:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:297:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:477:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:506:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:511:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:545:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:622:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:679:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:715:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:749:	MissingOverride:	The method 'run()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:750:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Thread': 'currentThread' is already in scope
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:851:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:860:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:870:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:883:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:887:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:897:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:924:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:933:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:978:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:989:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:1002:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:1006:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:1033:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:1157:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:1160:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandler.java:1180:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerHandlerBean.java:62:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerMaster.java:53:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerMaster.java:54:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerSender.java:30:	LooseCoupling:	Avoid using implementation types like 'LinkedBlockingQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerSender.java:60:	IdenticalCatchBranches:	'catch' branch identical to 'IOException' branch
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerSessionTracker.java:55:	UnusedPrivateField:	Avoid unused private fields such as 'expirer'.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerSessionTracker.java:116:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerSessionTracker.java:167:	UnnecessaryReturn:	Unnecessary return statement
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerSessionTracker.java:174:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerSessionTracker.java:184:	UnnecessaryReturn:	Unnecessary return statement
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerSyncThrottler.java:38:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerSyncThrottler.java:101:	UseNotifyAllInsteadOfNotify:	Call Thread.notifyAll() rather than Thread.notify()
zookeeper/java/org/apache/zookeeper/server/quorum/LearnerZooKeeperServer.java:64:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'map'
zookeeper/java/org/apache/zookeeper/server/quorum/LocalPeerBean.java:21:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.common.NetUtils.formatInetAddr'
zookeeper/java/org/apache/zookeeper/server/quorum/Observer.java:70:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/Observer.java:168:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Observer.java:240:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Observer.java:288:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Observer.java:291:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/ObserverMaster.java:79:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/ObserverMaster.java:87:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/ObserverMaster.java:88:	LooseCoupling:	Avoid using implementation types like 'ConcurrentLinkedQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/ObserverMaster.java:89:	LooseCoupling:	Avoid using implementation types like 'ConcurrentLinkedQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/ObserverMaster.java:97:	LooseCoupling:	Avoid using implementation types like 'ConcurrentLinkedQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/ObserverMaster.java:157:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/quorum/ObserverMaster.java:298:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/ObserverMaster.java:362:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/ObserverMaster.java:455:	MissingOverride:	The method 'run()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/quorum/ObserverMaster.java:456:	CloseResource:	Ensure that resources like this ServerSocket object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/ObserverMaster.java:462:	CloseResource:	Ensure that resources like this Socket object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/ObserverMaster.java:467:	CloseResource:	Ensure that resources like this BufferedInputStream object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/ObserverRequestProcessor.java:48:	LooseCoupling:	Avoid using implementation types like 'LinkedBlockingQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/ObserverRequestProcessor.java:97:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
zookeeper/java/org/apache/zookeeper/server/quorum/ObserverRequestProcessor.java:125:	IdenticalCatchBranches:	'catch' branch identical to 'RuntimeException' branch
zookeeper/java/org/apache/zookeeper/server/quorum/ObserverZooKeeperServer.java:51:	LooseCoupling:	Avoid using implementation types like 'ConcurrentLinkedQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/ObserverZooKeeperServer.java:116:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/server/quorum/PrependableSocket.java:59:	CloseResource:	Ensure that resources like this PushbackInputStream object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:22:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.common.NetUtils.formatInetAddr'
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:160:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:161:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:162:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:173:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:251:	LocalVariableNamingConventions:	The local variable name 'num_read' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:263:	LocalVariableNamingConventions:	The local variable name 'host_port' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:267:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:278:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:280:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:348:	AvoidThreadGroup:	Avoid using java.lang.ThreadGroup; it is not thread safe
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:348:	AvoidThreadGroup:	Avoid using java.lang.ThreadGroup; it is not thread safe
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:375:	CloseResource:	Ensure that resources like this Socket object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:386:	CloseResource:	Ensure that resources like this SSLSocket object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:388:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:394:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:409:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:432:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:467:	CloseResource:	Ensure that resources like this DataOutputStream object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:468:	CloseResource:	Ensure that resources like this DataInputStream object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:469:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:473:	CloseResource:	Ensure that resources like this BufferedOutputStream object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:493:	LocalVariableNamingConventions:	The local variable name 'addr_bytes' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:514:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:518:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:550:	CloseResource:	Ensure that resources like this DataInputStream object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:554:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:557:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:569:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:572:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:573:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:598:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:613:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:763:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:773:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:842:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:924:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:946:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:974:	CloseResource:	Ensure that resources like this ListenerHandler object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:987:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:1006:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:1007:	CloseResource:	Ensure that resources like this ListenerHandler object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:1066:	CloseResource:	Ensure that resources like this Socket object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:1071:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:1076:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:1101:	AvoidInstanceofChecksInCatchClause:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:1118:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:1159:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:1184:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:1268:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:1292:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:1300:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:1312:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:1318:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:1340:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:1366:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:1384:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:1402:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:1408:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:21:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.common.NetUtils.formatInetAddr'
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:267:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:321:	AvoidUsingHardCodedIP:	Do not hard code the IP address clientHostName
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:325:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:330:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'QuorumPeer': 'CONFIG_KEY_MULTI_ADDRESS_ENABLED' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:330:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'QuorumPeer': 'CONFIG_DEFAULT_MULTI_ADDRESS_ENABLED' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:356:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:362:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:431:	MissingOverride:	The method 'toString()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:437:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:437:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:461:	MissingOverride:	The method 'hashCode()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:472:	MissingOverride:	The method 'equals(Object)' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:483:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:579:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:663:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:673:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:716:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:722:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:727:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:826:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:837:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:856:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:865:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:906:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:920:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:925:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:954:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:957:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:961:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:1222:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:1487:	MissingOverride:	The method 'run()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:1781:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:1781:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:1792:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:1792:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:1925:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:1959:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:2005:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:2055:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:2111:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:2210:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:2359:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:2372:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:2380:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:2562:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:2567:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:2575:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:2581:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:2586:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:2591:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeer.java:2640:	MethodNamingConventions:	The instance method name 'getSynced_observers_metric' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:21:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.common.NetUtils.formatInetAddr'
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:105:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:140:	FinalFieldCouldBeStatic:	This final field could be made static
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:177:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:180:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:197:	IdenticalCatchBranches:	'catch' branch identical to 'IOException' branch
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:221:	IdenticalCatchBranches:	'catch' branch identical to 'IOException' branch
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:283:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:285:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:287:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:289:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:291:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:293:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:295:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:297:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:299:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:301:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:303:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:305:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:307:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:309:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:311:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:313:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:315:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:317:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:322:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:324:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:325:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:325:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:327:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:327:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:332:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:334:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:336:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:338:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:340:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:342:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:344:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:346:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:348:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:365:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:375:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:380:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:382:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:384:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:386:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:416:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:437:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:440:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:450:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:453:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:581:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:584:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:679:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:680:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:741:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:955:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java:957:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerMain.java:152:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumPeerMain.java:238:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumStats.java:53:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumStats.java:59:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumStats.java:59:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.java:133:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.java:156:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor.java:44:	LooseCoupling:	Avoid using implementation types like 'LinkedBlockingQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor.java:46:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor.java:76:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
zookeeper/java/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.java:49:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.java:112:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/RemotePeerBean.java:21:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.common.NetUtils.formatInetAddr'
zookeeper/java/org/apache/zookeeper/server/quorum/SendAckRequestProcessor.java:61:	MissingOverride:	The method 'flush()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/quorum/SyncThrottleException.java:38:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
zookeeper/java/org/apache/zookeeper/server/quorum/SyncedLearnerTracker.java:27:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/SyncedLearnerTracker.java:75:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/SyncedLearnerTracker.java:77:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/SyncedLearnerTracker.java:86:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/UnifiedServerSocket.java:172:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/server/quorum/UnifiedServerSocket.java:266:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/UnifiedServerSocket.java:274:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/UnifiedServerSocket.java:666:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/server/quorum/UnifiedServerSocket.java:744:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/server/quorum/UpgradeableSessionTracker.java:43:	UncommentedEmptyMethodBody:	Document empty method body
zookeeper/java/org/apache/zookeeper/server/quorum/UpgradeableSessionTracker.java:94:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/Vote.java:149:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/quorum/Vote.java:159:	MissingOverride:	The method 'toString()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/quorum/auth/NullQuorumAuthLearner.java:31:	UnnecessaryReturn:	Unnecessary return statement
zookeeper/java/org/apache/zookeeper/server/quorum/auth/QuorumAuth.java:28:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/server/quorum/auth/QuorumAuth.java:90:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/quorum/auth/QuorumAuth.java:90:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'QuorumAuth': 'QUORUM_AUTH_MAGIC_NUMBER' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java:78:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java:87:	CloseResource:	Ensure that resources like this DataOutputStream object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java:88:	CloseResource:	Ensure that resources like this DataInputStream object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java:142:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java:179:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'retval'
zookeeper/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java:180:	MissingOverride:	The method 'run()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java:181:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java:191:	LocalVariableNamingConventions:	The final local variable name 'UNKNOWN_SERVER_ERROR_TEXT' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer.java:62:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
zookeeper/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer.java:69:	CloseResource:	Ensure that resources like this DataOutputStream object are closed after use
zookeeper/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer.java:95:	AssignmentInOperand:	Avoid assignments in operands
zookeeper/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer.java:97:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer.java:110:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer.java:129:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
zookeeper/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer.java:132:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.java:99:	MissingOverride:	The method 'handle(Callback[])' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.java:116:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.java:132:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.java:166:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java:69:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java:70:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java:71:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java:81:	MissingOverride:	The method 'hashCode()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java:86:	MissingOverride:	The method 'equals(Object)' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java:140:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java:177:	IdenticalCatchBranches:	'catch' branch identical to 'IOException' branch
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java:223:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java:246:	MissingOverride:	The method 'toString()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java:329:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java:334:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java:335:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java:358:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java:365:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java:366:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java:369:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumMaj.java:39:	UnusedPrivateField:	Avoid unused private fields such as 'LOG'.
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumMaj.java:47:	MissingOverride:	The method 'hashCode()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumMaj.java:52:	MissingOverride:	The method 'equals(Object)' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumMaj.java:103:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumMaj.java:119:	MissingOverride:	The method 'toString()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumMaj.java:141:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumOracleMaj.java:86:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumOracleMaj.java:125:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumOracleMaj.java:133:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumOracleMaj.java:163:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumVerifier.java:46:	MissingOverride:	The method 'equals(Object)' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumVerifier.java:66:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumVerifier.java:76:	UnnecessarySemicolon:	Unnecessary semicolon
zookeeper/java/org/apache/zookeeper/server/quorum/flexible/QuorumVerifier.java:78:	MissingOverride:	The method 'toString()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/util/AdHash.java:32:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/util/BitHashSet.java:106:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
zookeeper/java/org/apache/zookeeper/server/util/ConfigUtils.java:28:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/server/util/ConfigUtils.java:44:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/util/JvmPauseMonitor.java:72:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/util/JvmPauseMonitor.java:139:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/util/JvmPauseMonitor.java:155:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/server/util/JvmPauseMonitor.java:174:	MissingOverride:	The method 'toString()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/server/util/JvmPauseMonitor.java:180:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/server/util/JvmPauseMonitor.java:194:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/util/JvmPauseMonitor.java:201:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/util/JvmPauseMonitor.java:204:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/util/KerberosUtil.java:23:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/server/util/LogChopper.java:46:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/server/util/LogChopper.java:117:	UnusedLocalVariable:	Avoid unused local variables such as 'txn'.
zookeeper/java/org/apache/zookeeper/server/util/MessageTracker.java:50:	FormalParameterNamingConventions:	The method parameter name 'buffer_size' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/server/util/MessageTracker.java:112:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/util/MessageTracker.java:114:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/util/MessageTracker.java:131:	UnusedPrivateMethod:	Avoid unused private methods such as 'getTimestamp()'.
zookeeper/java/org/apache/zookeeper/server/util/OSMXBean.java:62:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
zookeeper/java/org/apache/zookeeper/server/util/OSMXBean.java:65:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/util/OSMXBean.java:103:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/util/OSMXBean.java:115:	CloseResource:	Ensure that resources like this InputStream object are closed after use
zookeeper/java/org/apache/zookeeper/server/util/OSMXBean.java:120:	AssignmentInOperand:	Avoid assignments in operands
zookeeper/java/org/apache/zookeeper/server/util/OSMXBean.java:145:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/util/OSMXBean.java:151:	CloseResource:	Ensure that resources like this InputStream object are closed after use
zookeeper/java/org/apache/zookeeper/server/util/OSMXBean.java:156:	AssignmentInOperand:	Avoid assignments in operands
zookeeper/java/org/apache/zookeeper/server/util/QuotaMetricsUtils.java:36:	ClassNamingConventions:	The enum name 'QUOTA_LIMIT_USAGE_METRIC_TYPE' doesn't match '[A-Z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:21:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.ZooDefs.OpCode.checkWatches'
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:22:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.ZooDefs.OpCode.create'
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:23:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.ZooDefs.OpCode.create2'
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:24:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.ZooDefs.OpCode.createContainer'
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:25:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.ZooDefs.OpCode.delete'
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:26:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.ZooDefs.OpCode.deleteContainer'
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:27:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.ZooDefs.OpCode.exists'
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:28:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.ZooDefs.OpCode.getACL'
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:29:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.ZooDefs.OpCode.getChildren'
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:30:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.ZooDefs.OpCode.getChildren2'
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:31:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.ZooDefs.OpCode.getData'
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:32:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.ZooDefs.OpCode.removeWatches'
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:33:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.ZooDefs.OpCode.setACL'
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:34:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.ZooDefs.OpCode.setData'
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:35:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.ZooDefs.OpCode.setWatches2'
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:36:	UnnecessaryImport:	Unused static import 'org.apache.zookeeper.ZooDefs.OpCode.sync'
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:139:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:280:	LooseCoupling:	Avoid using implementation types like 'ConcurrentLinkedQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:281:	LooseCoupling:	Avoid using implementation types like 'LinkedBlockingQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:302:	LooseCoupling:	Avoid using implementation types like 'ConcurrentLinkedQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/util/RequestPathMetricsCollector.java:362:	LooseCoupling:	Avoid using implementation types like 'ConcurrentLinkedQueue'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/util/SerializeUtils.java:52:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/server/util/SerializeUtils.java:163:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/util/VerifyingFileFactory.java:34:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/server/util/VerifyingFileFactory.java:65:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/server/util/ZxidUtils.java:21:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/server/watch/PathParentIterator.java:28:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/server/watch/PathParentIterator.java:65:	UselessQualifiedThis:	Useless qualified this usage in the same class.
zookeeper/java/org/apache/zookeeper/server/watch/PathParentIterator.java:91:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/server/watch/WatchManagerFactory.java:29:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/server/watch/WatchManagerOptimized.java:58:	LooseCoupling:	Avoid using implementation types like 'ConcurrentHashMap'; use the interface instead
zookeeper/java/org/apache/zookeeper/server/watch/WatcherCleaner.java:50:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
zookeeper/java/org/apache/zookeeper/server/watch/WatcherMode.java:29:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'WatcherMode': 'STANDARD' is already in scope because it is declared in an enclosing type
zookeeper/java/org/apache/zookeeper/server/watch/WatcherMode.java:32:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
zookeeper/java/org/apache/zookeeper/server/watch/WatcherOrBitSet.java:39:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
zookeeper/java/org/apache/zookeeper/server/watch/WatcherOrBitSet.java:46:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
zookeeper/java/org/apache/zookeeper/util/CircularBlockingQueue.java:52:	LooseCoupling:	Avoid using implementation types like 'ArrayDeque'; use the interface instead
zookeeper/java/org/apache/zookeeper/util/CircularBlockingQueue.java:84:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/util/PemReader.java:171:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/util/PemReader.java:177:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/util/PemReader.java:201:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/util/PemReader.java:207:	EmptyCatchBlock:	Avoid empty catch blocks
zookeeper/java/org/apache/zookeeper/util/SecurityUtils.java:40:	UseUtilityClass:	This utility class has a non-private constructor
zookeeper/java/org/apache/zookeeper/util/SecurityUtils.java:62:	FormalParameterNamingConventions:	The final method parameter name 'LOG' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/util/SecurityUtils.java:72:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/util/SecurityUtils.java:73:	UselessParentheses:	Useless parentheses.
zookeeper/java/org/apache/zookeeper/util/SecurityUtils.java:118:	MissingOverride:	The method 'run()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/util/SecurityUtils.java:127:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'saslClient'
zookeeper/java/org/apache/zookeeper/util/SecurityUtils.java:160:	FormalParameterNamingConventions:	The final method parameter name 'LOG' doesn't match '[a-z][a-zA-Z0-9]*'
zookeeper/java/org/apache/zookeeper/util/SecurityUtils.java:164:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
zookeeper/java/org/apache/zookeeper/util/SecurityUtils.java:214:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
zookeeper/java/org/apache/zookeeper/util/SecurityUtils.java:224:	MissingOverride:	The method 'run()' is missing an @Override annotation.
zookeeper/java/org/apache/zookeeper/util/SecurityUtils.java:247:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'saslServer'
zookeeper/java/org/apache/zookeeper/util/SecurityUtils.java:270:	LiteralsFirstInComparisons:	Position literals first in String comparisons
zookeeper/java/org/apache/zookeeper/util/SecurityUtils.java:279:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
zookeeper/java/org/apache/zookeeper/util/SecurityUtils.java:285:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
zookeeper/java/org/apache/zookeeper/util/ServiceUtils.java:30:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
zookeeper/java/org/apache/zookeeper/util/ServiceUtils.java:65:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
